<?php
/**
 * AuEmployeePortalSettingsModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Australia
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: AU
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.21
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use ArrayAccess;
use Swagger\Client\ObjectSerializer;

/**
 * AuEmployeePortalSettingsModel Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class AuEmployeePortalSettingsModel implements ModelInterface, ArrayAccess
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'AuEmployeePortalSettingsModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'allow_employee_super_fund_self_service' => 'bool',
        'can_specify_higher_classification' => 'bool',
        'allow_employee_leave_self_service' => 'bool',
        'allow_employee_self_editing' => 'bool',
        'timesheet_setting' => 'string',
        'allow_employee_to_set_unavailability' => 'bool',
        'allow_employee_bank_account_self_service' => 'bool',
        'allow_employee_satisfaction_survey' => 'bool',
        'allow_employees_to_view_all_approved_leave' => 'bool',
        'unavailability_cut_off' => 'int',
        'allow_employees_to_upload_profile_picture' => 'bool',
        'allow_employee_expenses_self_service' => 'bool',
        'allow_employee_override_tax_codes' => 'bool',
        'show_pay_days_in_employee_calendar' => 'bool',
        'enable_work_zone_clock_on' => 'bool',
        'require_photo' => 'bool',
        'allow_employee_shift_selection' => 'bool',
        'clock_on_window_minutes' => 'int',
        'clock_off_window_minutes' => 'int',
        'clock_off_reminder_notification_minutes' => 'int',
        'send_employee_details_update_notifications' => 'bool',
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'allow_employee_super_fund_self_service' => null,
        'can_specify_higher_classification' => null,
        'allow_employee_leave_self_service' => null,
        'allow_employee_self_editing' => null,
        'timesheet_setting' => null,
        'allow_employee_to_set_unavailability' => null,
        'allow_employee_bank_account_self_service' => null,
        'allow_employee_satisfaction_survey' => null,
        'allow_employees_to_view_all_approved_leave' => null,
        'unavailability_cut_off' => 'int32',
        'allow_employees_to_upload_profile_picture' => null,
        'allow_employee_expenses_self_service' => null,
        'allow_employee_override_tax_codes' => null,
        'show_pay_days_in_employee_calendar' => null,
        'enable_work_zone_clock_on' => null,
        'require_photo' => null,
        'allow_employee_shift_selection' => null,
        'clock_on_window_minutes' => 'int32',
        'clock_off_window_minutes' => 'int32',
        'clock_off_reminder_notification_minutes' => 'int32',
        'send_employee_details_update_notifications' => null,
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'allow_employee_super_fund_self_service' => 'allowEmployeeSuperFundSelfService',
        'can_specify_higher_classification' => 'canSpecifyHigherClassification',
        'allow_employee_leave_self_service' => 'allowEmployeeLeaveSelfService',
        'allow_employee_self_editing' => 'allowEmployeeSelfEditing',
        'timesheet_setting' => 'timesheetSetting',
        'allow_employee_to_set_unavailability' => 'allowEmployeeToSetUnavailability',
        'allow_employee_bank_account_self_service' => 'allowEmployeeBankAccountSelfService',
        'allow_employee_satisfaction_survey' => 'allowEmployeeSatisfactionSurvey',
        'allow_employees_to_view_all_approved_leave' => 'allowEmployeesToViewAllApprovedLeave',
        'unavailability_cut_off' => 'unavailabilityCutOff',
        'allow_employees_to_upload_profile_picture' => 'allowEmployeesToUploadProfilePicture',
        'allow_employee_expenses_self_service' => 'allowEmployeeExpensesSelfService',
        'allow_employee_override_tax_codes' => 'allowEmployeeOverrideTaxCodes',
        'show_pay_days_in_employee_calendar' => 'showPayDaysInEmployeeCalendar',
        'enable_work_zone_clock_on' => 'enableWorkZoneClockOn',
        'require_photo' => 'requirePhoto',
        'allow_employee_shift_selection' => 'allowEmployeeShiftSelection',
        'clock_on_window_minutes' => 'clockOnWindowMinutes',
        'clock_off_window_minutes' => 'clockOffWindowMinutes',
        'clock_off_reminder_notification_minutes' => 'clockOffReminderNotificationMinutes',
        'send_employee_details_update_notifications' => 'sendEmployeeDetailsUpdateNotifications',
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'allow_employee_super_fund_self_service' => 'setAllowEmployeeSuperFundSelfService',
        'can_specify_higher_classification' => 'setCanSpecifyHigherClassification',
        'allow_employee_leave_self_service' => 'setAllowEmployeeLeaveSelfService',
        'allow_employee_self_editing' => 'setAllowEmployeeSelfEditing',
        'timesheet_setting' => 'setTimesheetSetting',
        'allow_employee_to_set_unavailability' => 'setAllowEmployeeToSetUnavailability',
        'allow_employee_bank_account_self_service' => 'setAllowEmployeeBankAccountSelfService',
        'allow_employee_satisfaction_survey' => 'setAllowEmployeeSatisfactionSurvey',
        'allow_employees_to_view_all_approved_leave' => 'setAllowEmployeesToViewAllApprovedLeave',
        'unavailability_cut_off' => 'setUnavailabilityCutOff',
        'allow_employees_to_upload_profile_picture' => 'setAllowEmployeesToUploadProfilePicture',
        'allow_employee_expenses_self_service' => 'setAllowEmployeeExpensesSelfService',
        'allow_employee_override_tax_codes' => 'setAllowEmployeeOverrideTaxCodes',
        'show_pay_days_in_employee_calendar' => 'setShowPayDaysInEmployeeCalendar',
        'enable_work_zone_clock_on' => 'setEnableWorkZoneClockOn',
        'require_photo' => 'setRequirePhoto',
        'allow_employee_shift_selection' => 'setAllowEmployeeShiftSelection',
        'clock_on_window_minutes' => 'setClockOnWindowMinutes',
        'clock_off_window_minutes' => 'setClockOffWindowMinutes',
        'clock_off_reminder_notification_minutes' => 'setClockOffReminderNotificationMinutes',
        'send_employee_details_update_notifications' => 'setSendEmployeeDetailsUpdateNotifications',
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'allow_employee_super_fund_self_service' => 'getAllowEmployeeSuperFundSelfService',
        'can_specify_higher_classification' => 'getCanSpecifyHigherClassification',
        'allow_employee_leave_self_service' => 'getAllowEmployeeLeaveSelfService',
        'allow_employee_self_editing' => 'getAllowEmployeeSelfEditing',
        'timesheet_setting' => 'getTimesheetSetting',
        'allow_employee_to_set_unavailability' => 'getAllowEmployeeToSetUnavailability',
        'allow_employee_bank_account_self_service' => 'getAllowEmployeeBankAccountSelfService',
        'allow_employee_satisfaction_survey' => 'getAllowEmployeeSatisfactionSurvey',
        'allow_employees_to_view_all_approved_leave' => 'getAllowEmployeesToViewAllApprovedLeave',
        'unavailability_cut_off' => 'getUnavailabilityCutOff',
        'allow_employees_to_upload_profile_picture' => 'getAllowEmployeesToUploadProfilePicture',
        'allow_employee_expenses_self_service' => 'getAllowEmployeeExpensesSelfService',
        'allow_employee_override_tax_codes' => 'getAllowEmployeeOverrideTaxCodes',
        'show_pay_days_in_employee_calendar' => 'getShowPayDaysInEmployeeCalendar',
        'enable_work_zone_clock_on' => 'getEnableWorkZoneClockOn',
        'require_photo' => 'getRequirePhoto',
        'allow_employee_shift_selection' => 'getAllowEmployeeShiftSelection',
        'clock_on_window_minutes' => 'getClockOnWindowMinutes',
        'clock_off_window_minutes' => 'getClockOffWindowMinutes',
        'clock_off_reminder_notification_minutes' => 'getClockOffReminderNotificationMinutes',
        'send_employee_details_update_notifications' => 'getSendEmployeeDetailsUpdateNotifications',
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    public const TIMESHEET_SETTING_DISABLED = 'Disabled';
    public const TIMESHEET_SETTING_READ_ONLY = 'ReadOnly';
    public const TIMESHEET_SETTING_READ_WRITE = 'ReadWrite';
    public const TIMESHEET_SETTING_EDIT_KIOSK = 'EditKiosk';
    public const TIMESHEET_SETTING_EDIT_WORK_ZONE_CLOCK_ON_OFF = 'EditWorkZoneClockOnOff';
    public const TIMESHEET_SETTING_EDIT_KIOSK_OR_WORK_ZONE_CLOCK_ON_OFF = 'EditKioskOrWorkZoneClockOnOff';
    public const TIMESHEET_SETTING_ENABLED = 'Enabled';

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getTimesheetSettingAllowableValues()
    {
        return [
            self::TIMESHEET_SETTING_DISABLED,
            self::TIMESHEET_SETTING_READ_ONLY,
            self::TIMESHEET_SETTING_READ_WRITE,
            self::TIMESHEET_SETTING_EDIT_KIOSK,
            self::TIMESHEET_SETTING_EDIT_WORK_ZONE_CLOCK_ON_OFF,
            self::TIMESHEET_SETTING_EDIT_KIOSK_OR_WORK_ZONE_CLOCK_ON_OFF,
            self::TIMESHEET_SETTING_ENABLED,
        ];
    }

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['allow_employee_super_fund_self_service'] = isset($data['allow_employee_super_fund_self_service']) ? $data['allow_employee_super_fund_self_service'] : null;
        $this->container['can_specify_higher_classification'] = isset($data['can_specify_higher_classification']) ? $data['can_specify_higher_classification'] : null;
        $this->container['allow_employee_leave_self_service'] = isset($data['allow_employee_leave_self_service']) ? $data['allow_employee_leave_self_service'] : null;
        $this->container['allow_employee_self_editing'] = isset($data['allow_employee_self_editing']) ? $data['allow_employee_self_editing'] : null;
        $this->container['timesheet_setting'] = isset($data['timesheet_setting']) ? $data['timesheet_setting'] : null;
        $this->container['allow_employee_to_set_unavailability'] = isset($data['allow_employee_to_set_unavailability']) ? $data['allow_employee_to_set_unavailability'] : null;
        $this->container['allow_employee_bank_account_self_service'] = isset($data['allow_employee_bank_account_self_service']) ? $data['allow_employee_bank_account_self_service'] : null;
        $this->container['allow_employee_satisfaction_survey'] = isset($data['allow_employee_satisfaction_survey']) ? $data['allow_employee_satisfaction_survey'] : null;
        $this->container['allow_employees_to_view_all_approved_leave'] = isset($data['allow_employees_to_view_all_approved_leave']) ? $data['allow_employees_to_view_all_approved_leave'] : null;
        $this->container['unavailability_cut_off'] = isset($data['unavailability_cut_off']) ? $data['unavailability_cut_off'] : null;
        $this->container['allow_employees_to_upload_profile_picture'] = isset($data['allow_employees_to_upload_profile_picture']) ? $data['allow_employees_to_upload_profile_picture'] : null;
        $this->container['allow_employee_expenses_self_service'] = isset($data['allow_employee_expenses_self_service']) ? $data['allow_employee_expenses_self_service'] : null;
        $this->container['allow_employee_override_tax_codes'] = isset($data['allow_employee_override_tax_codes']) ? $data['allow_employee_override_tax_codes'] : null;
        $this->container['show_pay_days_in_employee_calendar'] = isset($data['show_pay_days_in_employee_calendar']) ? $data['show_pay_days_in_employee_calendar'] : null;
        $this->container['enable_work_zone_clock_on'] = isset($data['enable_work_zone_clock_on']) ? $data['enable_work_zone_clock_on'] : null;
        $this->container['require_photo'] = isset($data['require_photo']) ? $data['require_photo'] : null;
        $this->container['allow_employee_shift_selection'] = isset($data['allow_employee_shift_selection']) ? $data['allow_employee_shift_selection'] : null;
        $this->container['clock_on_window_minutes'] = isset($data['clock_on_window_minutes']) ? $data['clock_on_window_minutes'] : null;
        $this->container['clock_off_window_minutes'] = isset($data['clock_off_window_minutes']) ? $data['clock_off_window_minutes'] : null;
        $this->container['clock_off_reminder_notification_minutes'] = isset($data['clock_off_reminder_notification_minutes']) ? $data['clock_off_reminder_notification_minutes'] : null;
        $this->container['send_employee_details_update_notifications'] = isset($data['send_employee_details_update_notifications']) ? $data['send_employee_details_update_notifications'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        $allowedValues = $this->getTimesheetSettingAllowableValues();
        if (! is_null($this->container['timesheet_setting']) && ! in_array($this->container['timesheet_setting'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'timesheet_setting', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }

    /**
     * Gets allow_employee_super_fund_self_service
     *
     * @return bool
     */
    public function getAllowEmployeeSuperFundSelfService()
    {
        return $this->container['allow_employee_super_fund_self_service'];
    }

    /**
     * Sets allow_employee_super_fund_self_service
     *
     * @param bool $allow_employee_super_fund_self_service
     *
     * @return $this
     */
    public function setAllowEmployeeSuperFundSelfService($allow_employee_super_fund_self_service)
    {
        $this->container['allow_employee_super_fund_self_service'] = $allow_employee_super_fund_self_service;

        return $this;
    }

    /**
     * Gets can_specify_higher_classification
     *
     * @return bool
     */
    public function getCanSpecifyHigherClassification()
    {
        return $this->container['can_specify_higher_classification'];
    }

    /**
     * Sets can_specify_higher_classification
     *
     * @param bool $can_specify_higher_classification
     *
     * @return $this
     */
    public function setCanSpecifyHigherClassification($can_specify_higher_classification)
    {
        $this->container['can_specify_higher_classification'] = $can_specify_higher_classification;

        return $this;
    }

    /**
     * Gets allow_employee_leave_self_service
     *
     * @return bool
     */
    public function getAllowEmployeeLeaveSelfService()
    {
        return $this->container['allow_employee_leave_self_service'];
    }

    /**
     * Sets allow_employee_leave_self_service
     *
     * @param bool $allow_employee_leave_self_service
     *
     * @return $this
     */
    public function setAllowEmployeeLeaveSelfService($allow_employee_leave_self_service)
    {
        $this->container['allow_employee_leave_self_service'] = $allow_employee_leave_self_service;

        return $this;
    }

    /**
     * Gets allow_employee_self_editing
     *
     * @return bool
     */
    public function getAllowEmployeeSelfEditing()
    {
        return $this->container['allow_employee_self_editing'];
    }

    /**
     * Sets allow_employee_self_editing
     *
     * @param bool $allow_employee_self_editing
     *
     * @return $this
     */
    public function setAllowEmployeeSelfEditing($allow_employee_self_editing)
    {
        $this->container['allow_employee_self_editing'] = $allow_employee_self_editing;

        return $this;
    }

    /**
     * Gets timesheet_setting
     *
     * @return string
     */
    public function getTimesheetSetting()
    {
        return $this->container['timesheet_setting'];
    }

    /**
     * Sets timesheet_setting
     *
     * @param string $timesheet_setting
     *
     * @return $this
     */
    public function setTimesheetSetting($timesheet_setting)
    {
        $allowedValues = $this->getTimesheetSettingAllowableValues();
        if (! is_null($timesheet_setting) && ! in_array($timesheet_setting, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'timesheet_setting', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['timesheet_setting'] = $timesheet_setting;

        return $this;
    }

    /**
     * Gets allow_employee_to_set_unavailability
     *
     * @return bool
     */
    public function getAllowEmployeeToSetUnavailability()
    {
        return $this->container['allow_employee_to_set_unavailability'];
    }

    /**
     * Sets allow_employee_to_set_unavailability
     *
     * @param bool $allow_employee_to_set_unavailability
     *
     * @return $this
     */
    public function setAllowEmployeeToSetUnavailability($allow_employee_to_set_unavailability)
    {
        $this->container['allow_employee_to_set_unavailability'] = $allow_employee_to_set_unavailability;

        return $this;
    }

    /**
     * Gets allow_employee_bank_account_self_service
     *
     * @return bool
     */
    public function getAllowEmployeeBankAccountSelfService()
    {
        return $this->container['allow_employee_bank_account_self_service'];
    }

    /**
     * Sets allow_employee_bank_account_self_service
     *
     * @param bool $allow_employee_bank_account_self_service
     *
     * @return $this
     */
    public function setAllowEmployeeBankAccountSelfService($allow_employee_bank_account_self_service)
    {
        $this->container['allow_employee_bank_account_self_service'] = $allow_employee_bank_account_self_service;

        return $this;
    }

    /**
     * Gets allow_employee_satisfaction_survey
     *
     * @return bool
     */
    public function getAllowEmployeeSatisfactionSurvey()
    {
        return $this->container['allow_employee_satisfaction_survey'];
    }

    /**
     * Sets allow_employee_satisfaction_survey
     *
     * @param bool $allow_employee_satisfaction_survey
     *
     * @return $this
     */
    public function setAllowEmployeeSatisfactionSurvey($allow_employee_satisfaction_survey)
    {
        $this->container['allow_employee_satisfaction_survey'] = $allow_employee_satisfaction_survey;

        return $this;
    }

    /**
     * Gets allow_employees_to_view_all_approved_leave
     *
     * @return bool
     */
    public function getAllowEmployeesToViewAllApprovedLeave()
    {
        return $this->container['allow_employees_to_view_all_approved_leave'];
    }

    /**
     * Sets allow_employees_to_view_all_approved_leave
     *
     * @param bool $allow_employees_to_view_all_approved_leave
     *
     * @return $this
     */
    public function setAllowEmployeesToViewAllApprovedLeave($allow_employees_to_view_all_approved_leave)
    {
        $this->container['allow_employees_to_view_all_approved_leave'] = $allow_employees_to_view_all_approved_leave;

        return $this;
    }

    /**
     * Gets unavailability_cut_off
     *
     * @return int
     */
    public function getUnavailabilityCutOff()
    {
        return $this->container['unavailability_cut_off'];
    }

    /**
     * Sets unavailability_cut_off
     *
     * @param int $unavailability_cut_off
     *
     * @return $this
     */
    public function setUnavailabilityCutOff($unavailability_cut_off)
    {
        $this->container['unavailability_cut_off'] = $unavailability_cut_off;

        return $this;
    }

    /**
     * Gets allow_employees_to_upload_profile_picture
     *
     * @return bool
     */
    public function getAllowEmployeesToUploadProfilePicture()
    {
        return $this->container['allow_employees_to_upload_profile_picture'];
    }

    /**
     * Sets allow_employees_to_upload_profile_picture
     *
     * @param bool $allow_employees_to_upload_profile_picture
     *
     * @return $this
     */
    public function setAllowEmployeesToUploadProfilePicture($allow_employees_to_upload_profile_picture)
    {
        $this->container['allow_employees_to_upload_profile_picture'] = $allow_employees_to_upload_profile_picture;

        return $this;
    }

    /**
     * Gets allow_employee_expenses_self_service
     *
     * @return bool
     */
    public function getAllowEmployeeExpensesSelfService()
    {
        return $this->container['allow_employee_expenses_self_service'];
    }

    /**
     * Sets allow_employee_expenses_self_service
     *
     * @param bool $allow_employee_expenses_self_service
     *
     * @return $this
     */
    public function setAllowEmployeeExpensesSelfService($allow_employee_expenses_self_service)
    {
        $this->container['allow_employee_expenses_self_service'] = $allow_employee_expenses_self_service;

        return $this;
    }

    /**
     * Gets allow_employee_override_tax_codes
     *
     * @return bool
     */
    public function getAllowEmployeeOverrideTaxCodes()
    {
        return $this->container['allow_employee_override_tax_codes'];
    }

    /**
     * Sets allow_employee_override_tax_codes
     *
     * @param bool $allow_employee_override_tax_codes
     *
     * @return $this
     */
    public function setAllowEmployeeOverrideTaxCodes($allow_employee_override_tax_codes)
    {
        $this->container['allow_employee_override_tax_codes'] = $allow_employee_override_tax_codes;

        return $this;
    }

    /**
     * Gets show_pay_days_in_employee_calendar
     *
     * @return bool
     */
    public function getShowPayDaysInEmployeeCalendar()
    {
        return $this->container['show_pay_days_in_employee_calendar'];
    }

    /**
     * Sets show_pay_days_in_employee_calendar
     *
     * @param bool $show_pay_days_in_employee_calendar
     *
     * @return $this
     */
    public function setShowPayDaysInEmployeeCalendar($show_pay_days_in_employee_calendar)
    {
        $this->container['show_pay_days_in_employee_calendar'] = $show_pay_days_in_employee_calendar;

        return $this;
    }

    /**
     * Gets enable_work_zone_clock_on
     *
     * @return bool
     */
    public function getEnableWorkZoneClockOn()
    {
        return $this->container['enable_work_zone_clock_on'];
    }

    /**
     * Sets enable_work_zone_clock_on
     *
     * @param bool $enable_work_zone_clock_on
     *
     * @return $this
     */
    public function setEnableWorkZoneClockOn($enable_work_zone_clock_on)
    {
        $this->container['enable_work_zone_clock_on'] = $enable_work_zone_clock_on;

        return $this;
    }

    /**
     * Gets require_photo
     *
     * @return bool
     */
    public function getRequirePhoto()
    {
        return $this->container['require_photo'];
    }

    /**
     * Sets require_photo
     *
     * @param bool $require_photo
     *
     * @return $this
     */
    public function setRequirePhoto($require_photo)
    {
        $this->container['require_photo'] = $require_photo;

        return $this;
    }

    /**
     * Gets allow_employee_shift_selection
     *
     * @return bool
     */
    public function getAllowEmployeeShiftSelection()
    {
        return $this->container['allow_employee_shift_selection'];
    }

    /**
     * Sets allow_employee_shift_selection
     *
     * @param bool $allow_employee_shift_selection
     *
     * @return $this
     */
    public function setAllowEmployeeShiftSelection($allow_employee_shift_selection)
    {
        $this->container['allow_employee_shift_selection'] = $allow_employee_shift_selection;

        return $this;
    }

    /**
     * Gets clock_on_window_minutes
     *
     * @return int
     */
    public function getClockOnWindowMinutes()
    {
        return $this->container['clock_on_window_minutes'];
    }

    /**
     * Sets clock_on_window_minutes
     *
     * @param int $clock_on_window_minutes
     *
     * @return $this
     */
    public function setClockOnWindowMinutes($clock_on_window_minutes)
    {
        $this->container['clock_on_window_minutes'] = $clock_on_window_minutes;

        return $this;
    }

    /**
     * Gets clock_off_window_minutes
     *
     * @return int
     */
    public function getClockOffWindowMinutes()
    {
        return $this->container['clock_off_window_minutes'];
    }

    /**
     * Sets clock_off_window_minutes
     *
     * @param int $clock_off_window_minutes
     *
     * @return $this
     */
    public function setClockOffWindowMinutes($clock_off_window_minutes)
    {
        $this->container['clock_off_window_minutes'] = $clock_off_window_minutes;

        return $this;
    }

    /**
     * Gets clock_off_reminder_notification_minutes
     *
     * @return int
     */
    public function getClockOffReminderNotificationMinutes()
    {
        return $this->container['clock_off_reminder_notification_minutes'];
    }

    /**
     * Sets clock_off_reminder_notification_minutes
     *
     * @param int $clock_off_reminder_notification_minutes
     *
     * @return $this
     */
    public function setClockOffReminderNotificationMinutes($clock_off_reminder_notification_minutes)
    {
        $this->container['clock_off_reminder_notification_minutes'] = $clock_off_reminder_notification_minutes;

        return $this;
    }

    /**
     * Gets send_employee_details_update_notifications
     *
     * @return bool
     */
    public function getSendEmployeeDetailsUpdateNotifications()
    {
        return $this->container['send_employee_details_update_notifications'];
    }

    /**
     * Sets send_employee_details_update_notifications
     *
     * @param bool $send_employee_details_update_notifications
     *
     * @return $this
     */
    public function setSendEmployeeDetailsUpdateNotifications($send_employee_details_update_notifications)
    {
        $this->container['send_employee_details_update_notifications'] = $send_employee_details_update_notifications;

        return $this;
    }

    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param int $offset Offset
     *
     * @return bool
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param int $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param int $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
