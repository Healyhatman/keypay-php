<?php
/**
 * PayRunTotalModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Australia
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: AU
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.21
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use ArrayAccess;
use Swagger\Client\ObjectSerializer;

/**
 * PayRunTotalModel Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class PayRunTotalModel implements ModelInterface, ArrayAccess
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'PayRunTotalModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'int',
        'total_hours' => 'double',
        'gross_earnings' => 'double',
        'pre_tax_deductions' => 'double',
        'taxable_earnings' => 'double',
        'post_tax_deductions' => 'double',
        'net_earnings' => 'double',
        'total_employee_expenses' => 'double',
        'total_employer_liabilities' => 'double',
        'is_published' => 'bool',
        'pay_run_id' => 'int',
        'notes' => 'string',
        'notation' => 'string',
        'payg_withheld' => 'double',
        'sfss_withheld' => 'double',
        'help_withheld' => 'double',
        'super_contribution' => 'double',
        'employer_contribution' => 'double',
        'kiwi_saver_employee_contribution' => 'double',
        'kiwi_saver_employer_contribution' => 'double',
        'esct_contribution' => 'double',
        'student_loan_amount' => 'double',
        'post_grad_loan_amount' => 'double',
        'student_loan_additional_mandatory_amount' => 'double',
        'student_loan_additional_voluntary_amount' => 'double',
        'acc_levy_amount' => 'double',
        'cpf_employer_contribution_amount' => 'double',
        'cpf_employee_contribution_amount' => 'double',
        'employer_voluntary_cpf_amount' => 'double',
        'employer_voluntary_medi_save_amount' => 'double',
        'sdl_contribution_amount' => 'double',
        'employer_pension_contribution' => 'double',
        'employee_pension_contribution' => 'double',
        'employee_national_insurance_contribution' => 'double',
        'employer_national_insurance_contribution' => 'double',
        'employee_pensionable_earnings' => 'double',
        'employer_pensionable_earnings' => 'double',
        'termination_payment_ni_exempt' => 'double',
        'termination_payment_employer_ni' => 'double',
        'nic_class1_a' => 'double',
        'enrolled_in_pension_scheme' => 'bool',
        'deferral_date' => '\DateTime',
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => 'int32',
        'total_hours' => 'double',
        'gross_earnings' => 'double',
        'pre_tax_deductions' => 'double',
        'taxable_earnings' => 'double',
        'post_tax_deductions' => 'double',
        'net_earnings' => 'double',
        'total_employee_expenses' => 'double',
        'total_employer_liabilities' => 'double',
        'is_published' => null,
        'pay_run_id' => 'int32',
        'notes' => null,
        'notation' => null,
        'payg_withheld' => 'double',
        'sfss_withheld' => 'double',
        'help_withheld' => 'double',
        'super_contribution' => 'double',
        'employer_contribution' => 'double',
        'kiwi_saver_employee_contribution' => 'double',
        'kiwi_saver_employer_contribution' => 'double',
        'esct_contribution' => 'double',
        'student_loan_amount' => 'double',
        'post_grad_loan_amount' => 'double',
        'student_loan_additional_mandatory_amount' => 'double',
        'student_loan_additional_voluntary_amount' => 'double',
        'acc_levy_amount' => 'double',
        'cpf_employer_contribution_amount' => 'double',
        'cpf_employee_contribution_amount' => 'double',
        'employer_voluntary_cpf_amount' => 'double',
        'employer_voluntary_medi_save_amount' => 'double',
        'sdl_contribution_amount' => 'double',
        'employer_pension_contribution' => 'double',
        'employee_pension_contribution' => 'double',
        'employee_national_insurance_contribution' => 'double',
        'employer_national_insurance_contribution' => 'double',
        'employee_pensionable_earnings' => 'double',
        'employer_pensionable_earnings' => 'double',
        'termination_payment_ni_exempt' => 'double',
        'termination_payment_employer_ni' => 'double',
        'nic_class1_a' => 'double',
        'enrolled_in_pension_scheme' => null,
        'deferral_date' => 'date-time',
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'total_hours' => 'totalHours',
        'gross_earnings' => 'grossEarnings',
        'pre_tax_deductions' => 'preTaxDeductions',
        'taxable_earnings' => 'taxableEarnings',
        'post_tax_deductions' => 'postTaxDeductions',
        'net_earnings' => 'netEarnings',
        'total_employee_expenses' => 'totalEmployeeExpenses',
        'total_employer_liabilities' => 'totalEmployerLiabilities',
        'is_published' => 'isPublished',
        'pay_run_id' => 'payRunId',
        'notes' => 'notes',
        'notation' => 'notation',
        'payg_withheld' => 'paygWithheld',
        'sfss_withheld' => 'sfssWithheld',
        'help_withheld' => 'helpWithheld',
        'super_contribution' => 'superContribution',
        'employer_contribution' => 'employerContribution',
        'kiwi_saver_employee_contribution' => 'kiwiSaverEmployeeContribution',
        'kiwi_saver_employer_contribution' => 'kiwiSaverEmployerContribution',
        'esct_contribution' => 'esctContribution',
        'student_loan_amount' => 'studentLoanAmount',
        'post_grad_loan_amount' => 'postGradLoanAmount',
        'student_loan_additional_mandatory_amount' => 'studentLoanAdditionalMandatoryAmount',
        'student_loan_additional_voluntary_amount' => 'studentLoanAdditionalVoluntaryAmount',
        'acc_levy_amount' => 'accLevyAmount',
        'cpf_employer_contribution_amount' => 'cpfEmployerContributionAmount',
        'cpf_employee_contribution_amount' => 'cpfEmployeeContributionAmount',
        'employer_voluntary_cpf_amount' => 'employerVoluntaryCpfAmount',
        'employer_voluntary_medi_save_amount' => 'employerVoluntaryMediSaveAmount',
        'sdl_contribution_amount' => 'sdlContributionAmount',
        'employer_pension_contribution' => 'employerPensionContribution',
        'employee_pension_contribution' => 'employeePensionContribution',
        'employee_national_insurance_contribution' => 'employeeNationalInsuranceContribution',
        'employer_national_insurance_contribution' => 'employerNationalInsuranceContribution',
        'employee_pensionable_earnings' => 'employeePensionableEarnings',
        'employer_pensionable_earnings' => 'employerPensionableEarnings',
        'termination_payment_ni_exempt' => 'terminationPaymentNIExempt',
        'termination_payment_employer_ni' => 'terminationPaymentEmployerNI',
        'nic_class1_a' => 'nicClass1A',
        'enrolled_in_pension_scheme' => 'enrolledInPensionScheme',
        'deferral_date' => 'deferralDate',
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'total_hours' => 'setTotalHours',
        'gross_earnings' => 'setGrossEarnings',
        'pre_tax_deductions' => 'setPreTaxDeductions',
        'taxable_earnings' => 'setTaxableEarnings',
        'post_tax_deductions' => 'setPostTaxDeductions',
        'net_earnings' => 'setNetEarnings',
        'total_employee_expenses' => 'setTotalEmployeeExpenses',
        'total_employer_liabilities' => 'setTotalEmployerLiabilities',
        'is_published' => 'setIsPublished',
        'pay_run_id' => 'setPayRunId',
        'notes' => 'setNotes',
        'notation' => 'setNotation',
        'payg_withheld' => 'setPaygWithheld',
        'sfss_withheld' => 'setSfssWithheld',
        'help_withheld' => 'setHelpWithheld',
        'super_contribution' => 'setSuperContribution',
        'employer_contribution' => 'setEmployerContribution',
        'kiwi_saver_employee_contribution' => 'setKiwiSaverEmployeeContribution',
        'kiwi_saver_employer_contribution' => 'setKiwiSaverEmployerContribution',
        'esct_contribution' => 'setEsctContribution',
        'student_loan_amount' => 'setStudentLoanAmount',
        'post_grad_loan_amount' => 'setPostGradLoanAmount',
        'student_loan_additional_mandatory_amount' => 'setStudentLoanAdditionalMandatoryAmount',
        'student_loan_additional_voluntary_amount' => 'setStudentLoanAdditionalVoluntaryAmount',
        'acc_levy_amount' => 'setAccLevyAmount',
        'cpf_employer_contribution_amount' => 'setCpfEmployerContributionAmount',
        'cpf_employee_contribution_amount' => 'setCpfEmployeeContributionAmount',
        'employer_voluntary_cpf_amount' => 'setEmployerVoluntaryCpfAmount',
        'employer_voluntary_medi_save_amount' => 'setEmployerVoluntaryMediSaveAmount',
        'sdl_contribution_amount' => 'setSdlContributionAmount',
        'employer_pension_contribution' => 'setEmployerPensionContribution',
        'employee_pension_contribution' => 'setEmployeePensionContribution',
        'employee_national_insurance_contribution' => 'setEmployeeNationalInsuranceContribution',
        'employer_national_insurance_contribution' => 'setEmployerNationalInsuranceContribution',
        'employee_pensionable_earnings' => 'setEmployeePensionableEarnings',
        'employer_pensionable_earnings' => 'setEmployerPensionableEarnings',
        'termination_payment_ni_exempt' => 'setTerminationPaymentNiExempt',
        'termination_payment_employer_ni' => 'setTerminationPaymentEmployerNi',
        'nic_class1_a' => 'setNicClass1A',
        'enrolled_in_pension_scheme' => 'setEnrolledInPensionScheme',
        'deferral_date' => 'setDeferralDate',
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'total_hours' => 'getTotalHours',
        'gross_earnings' => 'getGrossEarnings',
        'pre_tax_deductions' => 'getPreTaxDeductions',
        'taxable_earnings' => 'getTaxableEarnings',
        'post_tax_deductions' => 'getPostTaxDeductions',
        'net_earnings' => 'getNetEarnings',
        'total_employee_expenses' => 'getTotalEmployeeExpenses',
        'total_employer_liabilities' => 'getTotalEmployerLiabilities',
        'is_published' => 'getIsPublished',
        'pay_run_id' => 'getPayRunId',
        'notes' => 'getNotes',
        'notation' => 'getNotation',
        'payg_withheld' => 'getPaygWithheld',
        'sfss_withheld' => 'getSfssWithheld',
        'help_withheld' => 'getHelpWithheld',
        'super_contribution' => 'getSuperContribution',
        'employer_contribution' => 'getEmployerContribution',
        'kiwi_saver_employee_contribution' => 'getKiwiSaverEmployeeContribution',
        'kiwi_saver_employer_contribution' => 'getKiwiSaverEmployerContribution',
        'esct_contribution' => 'getEsctContribution',
        'student_loan_amount' => 'getStudentLoanAmount',
        'post_grad_loan_amount' => 'getPostGradLoanAmount',
        'student_loan_additional_mandatory_amount' => 'getStudentLoanAdditionalMandatoryAmount',
        'student_loan_additional_voluntary_amount' => 'getStudentLoanAdditionalVoluntaryAmount',
        'acc_levy_amount' => 'getAccLevyAmount',
        'cpf_employer_contribution_amount' => 'getCpfEmployerContributionAmount',
        'cpf_employee_contribution_amount' => 'getCpfEmployeeContributionAmount',
        'employer_voluntary_cpf_amount' => 'getEmployerVoluntaryCpfAmount',
        'employer_voluntary_medi_save_amount' => 'getEmployerVoluntaryMediSaveAmount',
        'sdl_contribution_amount' => 'getSdlContributionAmount',
        'employer_pension_contribution' => 'getEmployerPensionContribution',
        'employee_pension_contribution' => 'getEmployeePensionContribution',
        'employee_national_insurance_contribution' => 'getEmployeeNationalInsuranceContribution',
        'employer_national_insurance_contribution' => 'getEmployerNationalInsuranceContribution',
        'employee_pensionable_earnings' => 'getEmployeePensionableEarnings',
        'employer_pensionable_earnings' => 'getEmployerPensionableEarnings',
        'termination_payment_ni_exempt' => 'getTerminationPaymentNiExempt',
        'termination_payment_employer_ni' => 'getTerminationPaymentEmployerNi',
        'nic_class1_a' => 'getNicClass1A',
        'enrolled_in_pension_scheme' => 'getEnrolledInPensionScheme',
        'deferral_date' => 'getDeferralDate',
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['total_hours'] = isset($data['total_hours']) ? $data['total_hours'] : null;
        $this->container['gross_earnings'] = isset($data['gross_earnings']) ? $data['gross_earnings'] : null;
        $this->container['pre_tax_deductions'] = isset($data['pre_tax_deductions']) ? $data['pre_tax_deductions'] : null;
        $this->container['taxable_earnings'] = isset($data['taxable_earnings']) ? $data['taxable_earnings'] : null;
        $this->container['post_tax_deductions'] = isset($data['post_tax_deductions']) ? $data['post_tax_deductions'] : null;
        $this->container['net_earnings'] = isset($data['net_earnings']) ? $data['net_earnings'] : null;
        $this->container['total_employee_expenses'] = isset($data['total_employee_expenses']) ? $data['total_employee_expenses'] : null;
        $this->container['total_employer_liabilities'] = isset($data['total_employer_liabilities']) ? $data['total_employer_liabilities'] : null;
        $this->container['is_published'] = isset($data['is_published']) ? $data['is_published'] : null;
        $this->container['pay_run_id'] = isset($data['pay_run_id']) ? $data['pay_run_id'] : null;
        $this->container['notes'] = isset($data['notes']) ? $data['notes'] : null;
        $this->container['notation'] = isset($data['notation']) ? $data['notation'] : null;
        $this->container['payg_withheld'] = isset($data['payg_withheld']) ? $data['payg_withheld'] : null;
        $this->container['sfss_withheld'] = isset($data['sfss_withheld']) ? $data['sfss_withheld'] : null;
        $this->container['help_withheld'] = isset($data['help_withheld']) ? $data['help_withheld'] : null;
        $this->container['super_contribution'] = isset($data['super_contribution']) ? $data['super_contribution'] : null;
        $this->container['employer_contribution'] = isset($data['employer_contribution']) ? $data['employer_contribution'] : null;
        $this->container['kiwi_saver_employee_contribution'] = isset($data['kiwi_saver_employee_contribution']) ? $data['kiwi_saver_employee_contribution'] : null;
        $this->container['kiwi_saver_employer_contribution'] = isset($data['kiwi_saver_employer_contribution']) ? $data['kiwi_saver_employer_contribution'] : null;
        $this->container['esct_contribution'] = isset($data['esct_contribution']) ? $data['esct_contribution'] : null;
        $this->container['student_loan_amount'] = isset($data['student_loan_amount']) ? $data['student_loan_amount'] : null;
        $this->container['post_grad_loan_amount'] = isset($data['post_grad_loan_amount']) ? $data['post_grad_loan_amount'] : null;
        $this->container['student_loan_additional_mandatory_amount'] = isset($data['student_loan_additional_mandatory_amount']) ? $data['student_loan_additional_mandatory_amount'] : null;
        $this->container['student_loan_additional_voluntary_amount'] = isset($data['student_loan_additional_voluntary_amount']) ? $data['student_loan_additional_voluntary_amount'] : null;
        $this->container['acc_levy_amount'] = isset($data['acc_levy_amount']) ? $data['acc_levy_amount'] : null;
        $this->container['cpf_employer_contribution_amount'] = isset($data['cpf_employer_contribution_amount']) ? $data['cpf_employer_contribution_amount'] : null;
        $this->container['cpf_employee_contribution_amount'] = isset($data['cpf_employee_contribution_amount']) ? $data['cpf_employee_contribution_amount'] : null;
        $this->container['employer_voluntary_cpf_amount'] = isset($data['employer_voluntary_cpf_amount']) ? $data['employer_voluntary_cpf_amount'] : null;
        $this->container['employer_voluntary_medi_save_amount'] = isset($data['employer_voluntary_medi_save_amount']) ? $data['employer_voluntary_medi_save_amount'] : null;
        $this->container['sdl_contribution_amount'] = isset($data['sdl_contribution_amount']) ? $data['sdl_contribution_amount'] : null;
        $this->container['employer_pension_contribution'] = isset($data['employer_pension_contribution']) ? $data['employer_pension_contribution'] : null;
        $this->container['employee_pension_contribution'] = isset($data['employee_pension_contribution']) ? $data['employee_pension_contribution'] : null;
        $this->container['employee_national_insurance_contribution'] = isset($data['employee_national_insurance_contribution']) ? $data['employee_national_insurance_contribution'] : null;
        $this->container['employer_national_insurance_contribution'] = isset($data['employer_national_insurance_contribution']) ? $data['employer_national_insurance_contribution'] : null;
        $this->container['employee_pensionable_earnings'] = isset($data['employee_pensionable_earnings']) ? $data['employee_pensionable_earnings'] : null;
        $this->container['employer_pensionable_earnings'] = isset($data['employer_pensionable_earnings']) ? $data['employer_pensionable_earnings'] : null;
        $this->container['termination_payment_ni_exempt'] = isset($data['termination_payment_ni_exempt']) ? $data['termination_payment_ni_exempt'] : null;
        $this->container['termination_payment_employer_ni'] = isset($data['termination_payment_employer_ni']) ? $data['termination_payment_employer_ni'] : null;
        $this->container['nic_class1_a'] = isset($data['nic_class1_a']) ? $data['nic_class1_a'] : null;
        $this->container['enrolled_in_pension_scheme'] = isset($data['enrolled_in_pension_scheme']) ? $data['enrolled_in_pension_scheme'] : null;
        $this->container['deferral_date'] = isset($data['deferral_date']) ? $data['deferral_date'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }

    /**
     * Gets id
     *
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int $id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets total_hours
     *
     * @return float
     */
    public function getTotalHours()
    {
        return $this->container['total_hours'];
    }

    /**
     * Sets total_hours
     *
     * @param float $total_hours
     *
     * @return $this
     */
    public function setTotalHours($total_hours)
    {
        $this->container['total_hours'] = $total_hours;

        return $this;
    }

    /**
     * Gets gross_earnings
     *
     * @return float
     */
    public function getGrossEarnings()
    {
        return $this->container['gross_earnings'];
    }

    /**
     * Sets gross_earnings
     *
     * @param float $gross_earnings
     *
     * @return $this
     */
    public function setGrossEarnings($gross_earnings)
    {
        $this->container['gross_earnings'] = $gross_earnings;

        return $this;
    }

    /**
     * Gets pre_tax_deductions
     *
     * @return float
     */
    public function getPreTaxDeductions()
    {
        return $this->container['pre_tax_deductions'];
    }

    /**
     * Sets pre_tax_deductions
     *
     * @param float $pre_tax_deductions
     *
     * @return $this
     */
    public function setPreTaxDeductions($pre_tax_deductions)
    {
        $this->container['pre_tax_deductions'] = $pre_tax_deductions;

        return $this;
    }

    /**
     * Gets taxable_earnings
     *
     * @return float
     */
    public function getTaxableEarnings()
    {
        return $this->container['taxable_earnings'];
    }

    /**
     * Sets taxable_earnings
     *
     * @param float $taxable_earnings
     *
     * @return $this
     */
    public function setTaxableEarnings($taxable_earnings)
    {
        $this->container['taxable_earnings'] = $taxable_earnings;

        return $this;
    }

    /**
     * Gets post_tax_deductions
     *
     * @return float
     */
    public function getPostTaxDeductions()
    {
        return $this->container['post_tax_deductions'];
    }

    /**
     * Sets post_tax_deductions
     *
     * @param float $post_tax_deductions
     *
     * @return $this
     */
    public function setPostTaxDeductions($post_tax_deductions)
    {
        $this->container['post_tax_deductions'] = $post_tax_deductions;

        return $this;
    }

    /**
     * Gets net_earnings
     *
     * @return float
     */
    public function getNetEarnings()
    {
        return $this->container['net_earnings'];
    }

    /**
     * Sets net_earnings
     *
     * @param float $net_earnings
     *
     * @return $this
     */
    public function setNetEarnings($net_earnings)
    {
        $this->container['net_earnings'] = $net_earnings;

        return $this;
    }

    /**
     * Gets total_employee_expenses
     *
     * @return float
     */
    public function getTotalEmployeeExpenses()
    {
        return $this->container['total_employee_expenses'];
    }

    /**
     * Sets total_employee_expenses
     *
     * @param float $total_employee_expenses
     *
     * @return $this
     */
    public function setTotalEmployeeExpenses($total_employee_expenses)
    {
        $this->container['total_employee_expenses'] = $total_employee_expenses;

        return $this;
    }

    /**
     * Gets total_employer_liabilities
     *
     * @return float
     */
    public function getTotalEmployerLiabilities()
    {
        return $this->container['total_employer_liabilities'];
    }

    /**
     * Sets total_employer_liabilities
     *
     * @param float $total_employer_liabilities
     *
     * @return $this
     */
    public function setTotalEmployerLiabilities($total_employer_liabilities)
    {
        $this->container['total_employer_liabilities'] = $total_employer_liabilities;

        return $this;
    }

    /**
     * Gets is_published
     *
     * @return bool
     */
    public function getIsPublished()
    {
        return $this->container['is_published'];
    }

    /**
     * Sets is_published
     *
     * @param bool $is_published
     *
     * @return $this
     */
    public function setIsPublished($is_published)
    {
        $this->container['is_published'] = $is_published;

        return $this;
    }

    /**
     * Gets pay_run_id
     *
     * @return int
     */
    public function getPayRunId()
    {
        return $this->container['pay_run_id'];
    }

    /**
     * Sets pay_run_id
     *
     * @param int $pay_run_id
     *
     * @return $this
     */
    public function setPayRunId($pay_run_id)
    {
        $this->container['pay_run_id'] = $pay_run_id;

        return $this;
    }

    /**
     * Gets notes
     *
     * @return string
     */
    public function getNotes()
    {
        return $this->container['notes'];
    }

    /**
     * Sets notes
     *
     * @param string $notes
     *
     * @return $this
     */
    public function setNotes($notes)
    {
        $this->container['notes'] = $notes;

        return $this;
    }

    /**
     * Gets notation
     *
     * @return string
     */
    public function getNotation()
    {
        return $this->container['notation'];
    }

    /**
     * Sets notation
     *
     * @param string $notation
     *
     * @return $this
     */
    public function setNotation($notation)
    {
        $this->container['notation'] = $notation;

        return $this;
    }

    /**
     * Gets payg_withheld
     *
     * @return float
     */
    public function getPaygWithheld()
    {
        return $this->container['payg_withheld'];
    }

    /**
     * Sets payg_withheld
     *
     * @param float $payg_withheld
     *
     * @return $this
     */
    public function setPaygWithheld($payg_withheld)
    {
        $this->container['payg_withheld'] = $payg_withheld;

        return $this;
    }

    /**
     * Gets sfss_withheld
     *
     * @return float
     */
    public function getSfssWithheld()
    {
        return $this->container['sfss_withheld'];
    }

    /**
     * Sets sfss_withheld
     *
     * @param float $sfss_withheld
     *
     * @return $this
     */
    public function setSfssWithheld($sfss_withheld)
    {
        $this->container['sfss_withheld'] = $sfss_withheld;

        return $this;
    }

    /**
     * Gets help_withheld
     *
     * @return float
     */
    public function getHelpWithheld()
    {
        return $this->container['help_withheld'];
    }

    /**
     * Sets help_withheld
     *
     * @param float $help_withheld
     *
     * @return $this
     */
    public function setHelpWithheld($help_withheld)
    {
        $this->container['help_withheld'] = $help_withheld;

        return $this;
    }

    /**
     * Gets super_contribution
     *
     * @return float
     */
    public function getSuperContribution()
    {
        return $this->container['super_contribution'];
    }

    /**
     * Sets super_contribution
     *
     * @param float $super_contribution
     *
     * @return $this
     */
    public function setSuperContribution($super_contribution)
    {
        $this->container['super_contribution'] = $super_contribution;

        return $this;
    }

    /**
     * Gets employer_contribution
     *
     * @return float
     */
    public function getEmployerContribution()
    {
        return $this->container['employer_contribution'];
    }

    /**
     * Sets employer_contribution
     *
     * @param float $employer_contribution
     *
     * @return $this
     */
    public function setEmployerContribution($employer_contribution)
    {
        $this->container['employer_contribution'] = $employer_contribution;

        return $this;
    }

    /**
     * Gets kiwi_saver_employee_contribution
     *
     * @return float
     */
    public function getKiwiSaverEmployeeContribution()
    {
        return $this->container['kiwi_saver_employee_contribution'];
    }

    /**
     * Sets kiwi_saver_employee_contribution
     *
     * @param float $kiwi_saver_employee_contribution
     *
     * @return $this
     */
    public function setKiwiSaverEmployeeContribution($kiwi_saver_employee_contribution)
    {
        $this->container['kiwi_saver_employee_contribution'] = $kiwi_saver_employee_contribution;

        return $this;
    }

    /**
     * Gets kiwi_saver_employer_contribution
     *
     * @return float
     */
    public function getKiwiSaverEmployerContribution()
    {
        return $this->container['kiwi_saver_employer_contribution'];
    }

    /**
     * Sets kiwi_saver_employer_contribution
     *
     * @param float $kiwi_saver_employer_contribution
     *
     * @return $this
     */
    public function setKiwiSaverEmployerContribution($kiwi_saver_employer_contribution)
    {
        $this->container['kiwi_saver_employer_contribution'] = $kiwi_saver_employer_contribution;

        return $this;
    }

    /**
     * Gets esct_contribution
     *
     * @return float
     */
    public function getEsctContribution()
    {
        return $this->container['esct_contribution'];
    }

    /**
     * Sets esct_contribution
     *
     * @param float $esct_contribution
     *
     * @return $this
     */
    public function setEsctContribution($esct_contribution)
    {
        $this->container['esct_contribution'] = $esct_contribution;

        return $this;
    }

    /**
     * Gets student_loan_amount
     *
     * @return float
     */
    public function getStudentLoanAmount()
    {
        return $this->container['student_loan_amount'];
    }

    /**
     * Sets student_loan_amount
     *
     * @param float $student_loan_amount
     *
     * @return $this
     */
    public function setStudentLoanAmount($student_loan_amount)
    {
        $this->container['student_loan_amount'] = $student_loan_amount;

        return $this;
    }

    /**
     * Gets post_grad_loan_amount
     *
     * @return float
     */
    public function getPostGradLoanAmount()
    {
        return $this->container['post_grad_loan_amount'];
    }

    /**
     * Sets post_grad_loan_amount
     *
     * @param float $post_grad_loan_amount
     *
     * @return $this
     */
    public function setPostGradLoanAmount($post_grad_loan_amount)
    {
        $this->container['post_grad_loan_amount'] = $post_grad_loan_amount;

        return $this;
    }

    /**
     * Gets student_loan_additional_mandatory_amount
     *
     * @return float
     */
    public function getStudentLoanAdditionalMandatoryAmount()
    {
        return $this->container['student_loan_additional_mandatory_amount'];
    }

    /**
     * Sets student_loan_additional_mandatory_amount
     *
     * @param float $student_loan_additional_mandatory_amount
     *
     * @return $this
     */
    public function setStudentLoanAdditionalMandatoryAmount($student_loan_additional_mandatory_amount)
    {
        $this->container['student_loan_additional_mandatory_amount'] = $student_loan_additional_mandatory_amount;

        return $this;
    }

    /**
     * Gets student_loan_additional_voluntary_amount
     *
     * @return float
     */
    public function getStudentLoanAdditionalVoluntaryAmount()
    {
        return $this->container['student_loan_additional_voluntary_amount'];
    }

    /**
     * Sets student_loan_additional_voluntary_amount
     *
     * @param float $student_loan_additional_voluntary_amount
     *
     * @return $this
     */
    public function setStudentLoanAdditionalVoluntaryAmount($student_loan_additional_voluntary_amount)
    {
        $this->container['student_loan_additional_voluntary_amount'] = $student_loan_additional_voluntary_amount;

        return $this;
    }

    /**
     * Gets acc_levy_amount
     *
     * @return float
     */
    public function getAccLevyAmount()
    {
        return $this->container['acc_levy_amount'];
    }

    /**
     * Sets acc_levy_amount
     *
     * @param float $acc_levy_amount
     *
     * @return $this
     */
    public function setAccLevyAmount($acc_levy_amount)
    {
        $this->container['acc_levy_amount'] = $acc_levy_amount;

        return $this;
    }

    /**
     * Gets cpf_employer_contribution_amount
     *
     * @return float
     */
    public function getCpfEmployerContributionAmount()
    {
        return $this->container['cpf_employer_contribution_amount'];
    }

    /**
     * Sets cpf_employer_contribution_amount
     *
     * @param float $cpf_employer_contribution_amount
     *
     * @return $this
     */
    public function setCpfEmployerContributionAmount($cpf_employer_contribution_amount)
    {
        $this->container['cpf_employer_contribution_amount'] = $cpf_employer_contribution_amount;

        return $this;
    }

    /**
     * Gets cpf_employee_contribution_amount
     *
     * @return float
     */
    public function getCpfEmployeeContributionAmount()
    {
        return $this->container['cpf_employee_contribution_amount'];
    }

    /**
     * Sets cpf_employee_contribution_amount
     *
     * @param float $cpf_employee_contribution_amount
     *
     * @return $this
     */
    public function setCpfEmployeeContributionAmount($cpf_employee_contribution_amount)
    {
        $this->container['cpf_employee_contribution_amount'] = $cpf_employee_contribution_amount;

        return $this;
    }

    /**
     * Gets employer_voluntary_cpf_amount
     *
     * @return float
     */
    public function getEmployerVoluntaryCpfAmount()
    {
        return $this->container['employer_voluntary_cpf_amount'];
    }

    /**
     * Sets employer_voluntary_cpf_amount
     *
     * @param float $employer_voluntary_cpf_amount
     *
     * @return $this
     */
    public function setEmployerVoluntaryCpfAmount($employer_voluntary_cpf_amount)
    {
        $this->container['employer_voluntary_cpf_amount'] = $employer_voluntary_cpf_amount;

        return $this;
    }

    /**
     * Gets employer_voluntary_medi_save_amount
     *
     * @return float
     */
    public function getEmployerVoluntaryMediSaveAmount()
    {
        return $this->container['employer_voluntary_medi_save_amount'];
    }

    /**
     * Sets employer_voluntary_medi_save_amount
     *
     * @param float $employer_voluntary_medi_save_amount
     *
     * @return $this
     */
    public function setEmployerVoluntaryMediSaveAmount($employer_voluntary_medi_save_amount)
    {
        $this->container['employer_voluntary_medi_save_amount'] = $employer_voluntary_medi_save_amount;

        return $this;
    }

    /**
     * Gets sdl_contribution_amount
     *
     * @return float
     */
    public function getSdlContributionAmount()
    {
        return $this->container['sdl_contribution_amount'];
    }

    /**
     * Sets sdl_contribution_amount
     *
     * @param float $sdl_contribution_amount
     *
     * @return $this
     */
    public function setSdlContributionAmount($sdl_contribution_amount)
    {
        $this->container['sdl_contribution_amount'] = $sdl_contribution_amount;

        return $this;
    }

    /**
     * Gets employer_pension_contribution
     *
     * @return float
     */
    public function getEmployerPensionContribution()
    {
        return $this->container['employer_pension_contribution'];
    }

    /**
     * Sets employer_pension_contribution
     *
     * @param float $employer_pension_contribution
     *
     * @return $this
     */
    public function setEmployerPensionContribution($employer_pension_contribution)
    {
        $this->container['employer_pension_contribution'] = $employer_pension_contribution;

        return $this;
    }

    /**
     * Gets employee_pension_contribution
     *
     * @return float
     */
    public function getEmployeePensionContribution()
    {
        return $this->container['employee_pension_contribution'];
    }

    /**
     * Sets employee_pension_contribution
     *
     * @param float $employee_pension_contribution
     *
     * @return $this
     */
    public function setEmployeePensionContribution($employee_pension_contribution)
    {
        $this->container['employee_pension_contribution'] = $employee_pension_contribution;

        return $this;
    }

    /**
     * Gets employee_national_insurance_contribution
     *
     * @return float
     */
    public function getEmployeeNationalInsuranceContribution()
    {
        return $this->container['employee_national_insurance_contribution'];
    }

    /**
     * Sets employee_national_insurance_contribution
     *
     * @param float $employee_national_insurance_contribution
     *
     * @return $this
     */
    public function setEmployeeNationalInsuranceContribution($employee_national_insurance_contribution)
    {
        $this->container['employee_national_insurance_contribution'] = $employee_national_insurance_contribution;

        return $this;
    }

    /**
     * Gets employer_national_insurance_contribution
     *
     * @return float
     */
    public function getEmployerNationalInsuranceContribution()
    {
        return $this->container['employer_national_insurance_contribution'];
    }

    /**
     * Sets employer_national_insurance_contribution
     *
     * @param float $employer_national_insurance_contribution
     *
     * @return $this
     */
    public function setEmployerNationalInsuranceContribution($employer_national_insurance_contribution)
    {
        $this->container['employer_national_insurance_contribution'] = $employer_national_insurance_contribution;

        return $this;
    }

    /**
     * Gets employee_pensionable_earnings
     *
     * @return float
     */
    public function getEmployeePensionableEarnings()
    {
        return $this->container['employee_pensionable_earnings'];
    }

    /**
     * Sets employee_pensionable_earnings
     *
     * @param float $employee_pensionable_earnings
     *
     * @return $this
     */
    public function setEmployeePensionableEarnings($employee_pensionable_earnings)
    {
        $this->container['employee_pensionable_earnings'] = $employee_pensionable_earnings;

        return $this;
    }

    /**
     * Gets employer_pensionable_earnings
     *
     * @return float
     */
    public function getEmployerPensionableEarnings()
    {
        return $this->container['employer_pensionable_earnings'];
    }

    /**
     * Sets employer_pensionable_earnings
     *
     * @param float $employer_pensionable_earnings
     *
     * @return $this
     */
    public function setEmployerPensionableEarnings($employer_pensionable_earnings)
    {
        $this->container['employer_pensionable_earnings'] = $employer_pensionable_earnings;

        return $this;
    }

    /**
     * Gets termination_payment_ni_exempt
     *
     * @return float
     */
    public function getTerminationPaymentNiExempt()
    {
        return $this->container['termination_payment_ni_exempt'];
    }

    /**
     * Sets termination_payment_ni_exempt
     *
     * @param float $termination_payment_ni_exempt
     *
     * @return $this
     */
    public function setTerminationPaymentNiExempt($termination_payment_ni_exempt)
    {
        $this->container['termination_payment_ni_exempt'] = $termination_payment_ni_exempt;

        return $this;
    }

    /**
     * Gets termination_payment_employer_ni
     *
     * @return float
     */
    public function getTerminationPaymentEmployerNi()
    {
        return $this->container['termination_payment_employer_ni'];
    }

    /**
     * Sets termination_payment_employer_ni
     *
     * @param float $termination_payment_employer_ni
     *
     * @return $this
     */
    public function setTerminationPaymentEmployerNi($termination_payment_employer_ni)
    {
        $this->container['termination_payment_employer_ni'] = $termination_payment_employer_ni;

        return $this;
    }

    /**
     * Gets nic_class1_a
     *
     * @return float
     */
    public function getNicClass1A()
    {
        return $this->container['nic_class1_a'];
    }

    /**
     * Sets nic_class1_a
     *
     * @param float $nic_class1_a
     *
     * @return $this
     */
    public function setNicClass1A($nic_class1_a)
    {
        $this->container['nic_class1_a'] = $nic_class1_a;

        return $this;
    }

    /**
     * Gets enrolled_in_pension_scheme
     *
     * @return bool
     */
    public function getEnrolledInPensionScheme()
    {
        return $this->container['enrolled_in_pension_scheme'];
    }

    /**
     * Sets enrolled_in_pension_scheme
     *
     * @param bool $enrolled_in_pension_scheme
     *
     * @return $this
     */
    public function setEnrolledInPensionScheme($enrolled_in_pension_scheme)
    {
        $this->container['enrolled_in_pension_scheme'] = $enrolled_in_pension_scheme;

        return $this;
    }

    /**
     * Gets deferral_date
     *
     * @return \DateTime
     */
    public function getDeferralDate()
    {
        return $this->container['deferral_date'];
    }

    /**
     * Sets deferral_date
     *
     * @param \DateTime $deferral_date
     *
     * @return $this
     */
    public function setDeferralDate($deferral_date)
    {
        $this->container['deferral_date'] = $deferral_date;

        return $this;
    }

    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param int $offset Offset
     *
     * @return bool
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param int $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param int $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
