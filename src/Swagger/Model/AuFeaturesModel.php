<?php
/**
 * AuFeaturesModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Australia
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: AU
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.21
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * AuFeaturesModel Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class AuFeaturesModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'AuFeaturesModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'allow_employee_super_fund_self_service' => 'bool',
        'clock_on_can_specify_higher_classification' => 'bool',
        'allow_employee_leave_self_service' => 'bool',
        'allow_employee_self_editing' => 'bool',
        'allow_employee_timesheets_self_service' => 'bool',
        'allow_employee_to_set_unavailability' => 'bool',
        'allow_employee_to_decline_shifts' => 'bool',
        'allow_employee_bank_account_self_service' => 'bool',
        'allow_employee_satisfaction_survey' => 'bool',
        'allow_employees_to_view_all_approved_leave' => 'bool',
        'unavailability_cut_off' => 'int',
        'allow_employees_to_upload_profile_picture' => 'bool',
        'allow_employee_rostering_self_service' => 'bool',
        'allow_employee_expenses_self_service' => 'bool',
        'allow_employee_override_tax_codes' => 'bool',
        'allow_employees_to_edit_kiosk_timesheets' => 'bool',
        'ess_timesheet_setting' => 'string',
        'employee_must_accept_shifts' => 'bool',
        'allow_employee_timesheets_without_start_stop_times' => 'bool',
        'allow_employee_to_swap_shifts' => 'bool',
        'clock_on_require_photo' => 'bool',
        'clock_on_allow_employee_shift_selection' => 'bool',
        'clock_on_window_minutes' => 'int',
        'clock_off_window_minutes' => 'int',
        'timesheets_require_location' => 'bool',
        'timesheets_require_work_type' => 'bool',
        'enable_work_zone_clock_on' => 'bool',
        'shift_bidding' => 'bool',
        'allow_to_select_higher_classification' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'allow_employee_super_fund_self_service' => null,
        'clock_on_can_specify_higher_classification' => null,
        'allow_employee_leave_self_service' => null,
        'allow_employee_self_editing' => null,
        'allow_employee_timesheets_self_service' => null,
        'allow_employee_to_set_unavailability' => null,
        'allow_employee_to_decline_shifts' => null,
        'allow_employee_bank_account_self_service' => null,
        'allow_employee_satisfaction_survey' => null,
        'allow_employees_to_view_all_approved_leave' => null,
        'unavailability_cut_off' => 'int32',
        'allow_employees_to_upload_profile_picture' => null,
        'allow_employee_rostering_self_service' => null,
        'allow_employee_expenses_self_service' => null,
        'allow_employee_override_tax_codes' => null,
        'allow_employees_to_edit_kiosk_timesheets' => null,
        'ess_timesheet_setting' => null,
        'employee_must_accept_shifts' => null,
        'allow_employee_timesheets_without_start_stop_times' => null,
        'allow_employee_to_swap_shifts' => null,
        'clock_on_require_photo' => null,
        'clock_on_allow_employee_shift_selection' => null,
        'clock_on_window_minutes' => 'int32',
        'clock_off_window_minutes' => 'int32',
        'timesheets_require_location' => null,
        'timesheets_require_work_type' => null,
        'enable_work_zone_clock_on' => null,
        'shift_bidding' => null,
        'allow_to_select_higher_classification' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'allow_employee_super_fund_self_service' => 'allowEmployeeSuperFundSelfService',
        'clock_on_can_specify_higher_classification' => 'clockOnCanSpecifyHigherClassification',
        'allow_employee_leave_self_service' => 'allowEmployeeLeaveSelfService',
        'allow_employee_self_editing' => 'allowEmployeeSelfEditing',
        'allow_employee_timesheets_self_service' => 'allowEmployeeTimesheetsSelfService',
        'allow_employee_to_set_unavailability' => 'allowEmployeeToSetUnavailability',
        'allow_employee_to_decline_shifts' => 'allowEmployeeToDeclineShifts',
        'allow_employee_bank_account_self_service' => 'allowEmployeeBankAccountSelfService',
        'allow_employee_satisfaction_survey' => 'allowEmployeeSatisfactionSurvey',
        'allow_employees_to_view_all_approved_leave' => 'allowEmployeesToViewAllApprovedLeave',
        'unavailability_cut_off' => 'unavailabilityCutOff',
        'allow_employees_to_upload_profile_picture' => 'allowEmployeesToUploadProfilePicture',
        'allow_employee_rostering_self_service' => 'allowEmployeeRosteringSelfService',
        'allow_employee_expenses_self_service' => 'allowEmployeeExpensesSelfService',
        'allow_employee_override_tax_codes' => 'allowEmployeeOverrideTaxCodes',
        'allow_employees_to_edit_kiosk_timesheets' => 'allowEmployeesToEditKioskTimesheets',
        'ess_timesheet_setting' => 'essTimesheetSetting',
        'employee_must_accept_shifts' => 'employeeMustAcceptShifts',
        'allow_employee_timesheets_without_start_stop_times' => 'allowEmployeeTimesheetsWithoutStartStopTimes',
        'allow_employee_to_swap_shifts' => 'allowEmployeeToSwapShifts',
        'clock_on_require_photo' => 'clockOnRequirePhoto',
        'clock_on_allow_employee_shift_selection' => 'clockOnAllowEmployeeShiftSelection',
        'clock_on_window_minutes' => 'clockOnWindowMinutes',
        'clock_off_window_minutes' => 'clockOffWindowMinutes',
        'timesheets_require_location' => 'timesheetsRequireLocation',
        'timesheets_require_work_type' => 'timesheetsRequireWorkType',
        'enable_work_zone_clock_on' => 'enableWorkZoneClockOn',
        'shift_bidding' => 'shiftBidding',
        'allow_to_select_higher_classification' => 'allowToSelectHigherClassification'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'allow_employee_super_fund_self_service' => 'setAllowEmployeeSuperFundSelfService',
        'clock_on_can_specify_higher_classification' => 'setClockOnCanSpecifyHigherClassification',
        'allow_employee_leave_self_service' => 'setAllowEmployeeLeaveSelfService',
        'allow_employee_self_editing' => 'setAllowEmployeeSelfEditing',
        'allow_employee_timesheets_self_service' => 'setAllowEmployeeTimesheetsSelfService',
        'allow_employee_to_set_unavailability' => 'setAllowEmployeeToSetUnavailability',
        'allow_employee_to_decline_shifts' => 'setAllowEmployeeToDeclineShifts',
        'allow_employee_bank_account_self_service' => 'setAllowEmployeeBankAccountSelfService',
        'allow_employee_satisfaction_survey' => 'setAllowEmployeeSatisfactionSurvey',
        'allow_employees_to_view_all_approved_leave' => 'setAllowEmployeesToViewAllApprovedLeave',
        'unavailability_cut_off' => 'setUnavailabilityCutOff',
        'allow_employees_to_upload_profile_picture' => 'setAllowEmployeesToUploadProfilePicture',
        'allow_employee_rostering_self_service' => 'setAllowEmployeeRosteringSelfService',
        'allow_employee_expenses_self_service' => 'setAllowEmployeeExpensesSelfService',
        'allow_employee_override_tax_codes' => 'setAllowEmployeeOverrideTaxCodes',
        'allow_employees_to_edit_kiosk_timesheets' => 'setAllowEmployeesToEditKioskTimesheets',
        'ess_timesheet_setting' => 'setEssTimesheetSetting',
        'employee_must_accept_shifts' => 'setEmployeeMustAcceptShifts',
        'allow_employee_timesheets_without_start_stop_times' => 'setAllowEmployeeTimesheetsWithoutStartStopTimes',
        'allow_employee_to_swap_shifts' => 'setAllowEmployeeToSwapShifts',
        'clock_on_require_photo' => 'setClockOnRequirePhoto',
        'clock_on_allow_employee_shift_selection' => 'setClockOnAllowEmployeeShiftSelection',
        'clock_on_window_minutes' => 'setClockOnWindowMinutes',
        'clock_off_window_minutes' => 'setClockOffWindowMinutes',
        'timesheets_require_location' => 'setTimesheetsRequireLocation',
        'timesheets_require_work_type' => 'setTimesheetsRequireWorkType',
        'enable_work_zone_clock_on' => 'setEnableWorkZoneClockOn',
        'shift_bidding' => 'setShiftBidding',
        'allow_to_select_higher_classification' => 'setAllowToSelectHigherClassification'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'allow_employee_super_fund_self_service' => 'getAllowEmployeeSuperFundSelfService',
        'clock_on_can_specify_higher_classification' => 'getClockOnCanSpecifyHigherClassification',
        'allow_employee_leave_self_service' => 'getAllowEmployeeLeaveSelfService',
        'allow_employee_self_editing' => 'getAllowEmployeeSelfEditing',
        'allow_employee_timesheets_self_service' => 'getAllowEmployeeTimesheetsSelfService',
        'allow_employee_to_set_unavailability' => 'getAllowEmployeeToSetUnavailability',
        'allow_employee_to_decline_shifts' => 'getAllowEmployeeToDeclineShifts',
        'allow_employee_bank_account_self_service' => 'getAllowEmployeeBankAccountSelfService',
        'allow_employee_satisfaction_survey' => 'getAllowEmployeeSatisfactionSurvey',
        'allow_employees_to_view_all_approved_leave' => 'getAllowEmployeesToViewAllApprovedLeave',
        'unavailability_cut_off' => 'getUnavailabilityCutOff',
        'allow_employees_to_upload_profile_picture' => 'getAllowEmployeesToUploadProfilePicture',
        'allow_employee_rostering_self_service' => 'getAllowEmployeeRosteringSelfService',
        'allow_employee_expenses_self_service' => 'getAllowEmployeeExpensesSelfService',
        'allow_employee_override_tax_codes' => 'getAllowEmployeeOverrideTaxCodes',
        'allow_employees_to_edit_kiosk_timesheets' => 'getAllowEmployeesToEditKioskTimesheets',
        'ess_timesheet_setting' => 'getEssTimesheetSetting',
        'employee_must_accept_shifts' => 'getEmployeeMustAcceptShifts',
        'allow_employee_timesheets_without_start_stop_times' => 'getAllowEmployeeTimesheetsWithoutStartStopTimes',
        'allow_employee_to_swap_shifts' => 'getAllowEmployeeToSwapShifts',
        'clock_on_require_photo' => 'getClockOnRequirePhoto',
        'clock_on_allow_employee_shift_selection' => 'getClockOnAllowEmployeeShiftSelection',
        'clock_on_window_minutes' => 'getClockOnWindowMinutes',
        'clock_off_window_minutes' => 'getClockOffWindowMinutes',
        'timesheets_require_location' => 'getTimesheetsRequireLocation',
        'timesheets_require_work_type' => 'getTimesheetsRequireWorkType',
        'enable_work_zone_clock_on' => 'getEnableWorkZoneClockOn',
        'shift_bidding' => 'getShiftBidding',
        'allow_to_select_higher_classification' => 'getAllowToSelectHigherClassification'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    const ESS_TIMESHEET_SETTING_DISABLED = 'Disabled';
    const ESS_TIMESHEET_SETTING_READ_ONLY = 'ReadOnly';
    const ESS_TIMESHEET_SETTING_READ_WRITE = 'ReadWrite';
    const ESS_TIMESHEET_SETTING_EDIT_KIOSK = 'EditKiosk';
    const ESS_TIMESHEET_SETTING_EDIT_WORK_ZONE_CLOCK_ON_OFF = 'EditWorkZoneClockOnOff';
    

    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getEssTimesheetSettingAllowableValues()
    {
        return [
            self::ESS_TIMESHEET_SETTING_DISABLED,
            self::ESS_TIMESHEET_SETTING_READ_ONLY,
            self::ESS_TIMESHEET_SETTING_READ_WRITE,
            self::ESS_TIMESHEET_SETTING_EDIT_KIOSK,
            self::ESS_TIMESHEET_SETTING_EDIT_WORK_ZONE_CLOCK_ON_OFF,
        ];
    }
    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['allow_employee_super_fund_self_service'] = isset($data['allow_employee_super_fund_self_service']) ? $data['allow_employee_super_fund_self_service'] : null;
        $this->container['clock_on_can_specify_higher_classification'] = isset($data['clock_on_can_specify_higher_classification']) ? $data['clock_on_can_specify_higher_classification'] : null;
        $this->container['allow_employee_leave_self_service'] = isset($data['allow_employee_leave_self_service']) ? $data['allow_employee_leave_self_service'] : null;
        $this->container['allow_employee_self_editing'] = isset($data['allow_employee_self_editing']) ? $data['allow_employee_self_editing'] : null;
        $this->container['allow_employee_timesheets_self_service'] = isset($data['allow_employee_timesheets_self_service']) ? $data['allow_employee_timesheets_self_service'] : null;
        $this->container['allow_employee_to_set_unavailability'] = isset($data['allow_employee_to_set_unavailability']) ? $data['allow_employee_to_set_unavailability'] : null;
        $this->container['allow_employee_to_decline_shifts'] = isset($data['allow_employee_to_decline_shifts']) ? $data['allow_employee_to_decline_shifts'] : null;
        $this->container['allow_employee_bank_account_self_service'] = isset($data['allow_employee_bank_account_self_service']) ? $data['allow_employee_bank_account_self_service'] : null;
        $this->container['allow_employee_satisfaction_survey'] = isset($data['allow_employee_satisfaction_survey']) ? $data['allow_employee_satisfaction_survey'] : null;
        $this->container['allow_employees_to_view_all_approved_leave'] = isset($data['allow_employees_to_view_all_approved_leave']) ? $data['allow_employees_to_view_all_approved_leave'] : null;
        $this->container['unavailability_cut_off'] = isset($data['unavailability_cut_off']) ? $data['unavailability_cut_off'] : null;
        $this->container['allow_employees_to_upload_profile_picture'] = isset($data['allow_employees_to_upload_profile_picture']) ? $data['allow_employees_to_upload_profile_picture'] : null;
        $this->container['allow_employee_rostering_self_service'] = isset($data['allow_employee_rostering_self_service']) ? $data['allow_employee_rostering_self_service'] : null;
        $this->container['allow_employee_expenses_self_service'] = isset($data['allow_employee_expenses_self_service']) ? $data['allow_employee_expenses_self_service'] : null;
        $this->container['allow_employee_override_tax_codes'] = isset($data['allow_employee_override_tax_codes']) ? $data['allow_employee_override_tax_codes'] : null;
        $this->container['allow_employees_to_edit_kiosk_timesheets'] = isset($data['allow_employees_to_edit_kiosk_timesheets']) ? $data['allow_employees_to_edit_kiosk_timesheets'] : null;
        $this->container['ess_timesheet_setting'] = isset($data['ess_timesheet_setting']) ? $data['ess_timesheet_setting'] : null;
        $this->container['employee_must_accept_shifts'] = isset($data['employee_must_accept_shifts']) ? $data['employee_must_accept_shifts'] : null;
        $this->container['allow_employee_timesheets_without_start_stop_times'] = isset($data['allow_employee_timesheets_without_start_stop_times']) ? $data['allow_employee_timesheets_without_start_stop_times'] : null;
        $this->container['allow_employee_to_swap_shifts'] = isset($data['allow_employee_to_swap_shifts']) ? $data['allow_employee_to_swap_shifts'] : null;
        $this->container['clock_on_require_photo'] = isset($data['clock_on_require_photo']) ? $data['clock_on_require_photo'] : null;
        $this->container['clock_on_allow_employee_shift_selection'] = isset($data['clock_on_allow_employee_shift_selection']) ? $data['clock_on_allow_employee_shift_selection'] : null;
        $this->container['clock_on_window_minutes'] = isset($data['clock_on_window_minutes']) ? $data['clock_on_window_minutes'] : null;
        $this->container['clock_off_window_minutes'] = isset($data['clock_off_window_minutes']) ? $data['clock_off_window_minutes'] : null;
        $this->container['timesheets_require_location'] = isset($data['timesheets_require_location']) ? $data['timesheets_require_location'] : null;
        $this->container['timesheets_require_work_type'] = isset($data['timesheets_require_work_type']) ? $data['timesheets_require_work_type'] : null;
        $this->container['enable_work_zone_clock_on'] = isset($data['enable_work_zone_clock_on']) ? $data['enable_work_zone_clock_on'] : null;
        $this->container['shift_bidding'] = isset($data['shift_bidding']) ? $data['shift_bidding'] : null;
        $this->container['allow_to_select_higher_classification'] = isset($data['allow_to_select_higher_classification']) ? $data['allow_to_select_higher_classification'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        $allowedValues = $this->getEssTimesheetSettingAllowableValues();
        if (!is_null($this->container['ess_timesheet_setting']) && !in_array($this->container['ess_timesheet_setting'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'ess_timesheet_setting', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets allow_employee_super_fund_self_service
     *
     * @return bool
     */
    public function getAllowEmployeeSuperFundSelfService()
    {
        return $this->container['allow_employee_super_fund_self_service'];
    }

    /**
     * Sets allow_employee_super_fund_self_service
     *
     * @param bool $allow_employee_super_fund_self_service 
     *
     * @return $this
     */
    public function setAllowEmployeeSuperFundSelfService($allow_employee_super_fund_self_service)
    {
        $this->container['allow_employee_super_fund_self_service'] = $allow_employee_super_fund_self_service;

        return $this;
    }

    /**
     * Gets clock_on_can_specify_higher_classification
     *
     * @return bool
     */
    public function getClockOnCanSpecifyHigherClassification()
    {
        return $this->container['clock_on_can_specify_higher_classification'];
    }

    /**
     * Sets clock_on_can_specify_higher_classification
     *
     * @param bool $clock_on_can_specify_higher_classification 
     *
     * @return $this
     */
    public function setClockOnCanSpecifyHigherClassification($clock_on_can_specify_higher_classification)
    {
        $this->container['clock_on_can_specify_higher_classification'] = $clock_on_can_specify_higher_classification;

        return $this;
    }

    /**
     * Gets allow_employee_leave_self_service
     *
     * @return bool
     */
    public function getAllowEmployeeLeaveSelfService()
    {
        return $this->container['allow_employee_leave_self_service'];
    }

    /**
     * Sets allow_employee_leave_self_service
     *
     * @param bool $allow_employee_leave_self_service 
     *
     * @return $this
     */
    public function setAllowEmployeeLeaveSelfService($allow_employee_leave_self_service)
    {
        $this->container['allow_employee_leave_self_service'] = $allow_employee_leave_self_service;

        return $this;
    }

    /**
     * Gets allow_employee_self_editing
     *
     * @return bool
     */
    public function getAllowEmployeeSelfEditing()
    {
        return $this->container['allow_employee_self_editing'];
    }

    /**
     * Sets allow_employee_self_editing
     *
     * @param bool $allow_employee_self_editing 
     *
     * @return $this
     */
    public function setAllowEmployeeSelfEditing($allow_employee_self_editing)
    {
        $this->container['allow_employee_self_editing'] = $allow_employee_self_editing;

        return $this;
    }

    /**
     * Gets allow_employee_timesheets_self_service
     *
     * @return bool
     */
    public function getAllowEmployeeTimesheetsSelfService()
    {
        return $this->container['allow_employee_timesheets_self_service'];
    }

    /**
     * Sets allow_employee_timesheets_self_service
     *
     * @param bool $allow_employee_timesheets_self_service 
     *
     * @return $this
     */
    public function setAllowEmployeeTimesheetsSelfService($allow_employee_timesheets_self_service)
    {
        $this->container['allow_employee_timesheets_self_service'] = $allow_employee_timesheets_self_service;

        return $this;
    }

    /**
     * Gets allow_employee_to_set_unavailability
     *
     * @return bool
     */
    public function getAllowEmployeeToSetUnavailability()
    {
        return $this->container['allow_employee_to_set_unavailability'];
    }

    /**
     * Sets allow_employee_to_set_unavailability
     *
     * @param bool $allow_employee_to_set_unavailability 
     *
     * @return $this
     */
    public function setAllowEmployeeToSetUnavailability($allow_employee_to_set_unavailability)
    {
        $this->container['allow_employee_to_set_unavailability'] = $allow_employee_to_set_unavailability;

        return $this;
    }

    /**
     * Gets allow_employee_to_decline_shifts
     *
     * @return bool
     */
    public function getAllowEmployeeToDeclineShifts()
    {
        return $this->container['allow_employee_to_decline_shifts'];
    }

    /**
     * Sets allow_employee_to_decline_shifts
     *
     * @param bool $allow_employee_to_decline_shifts 
     *
     * @return $this
     */
    public function setAllowEmployeeToDeclineShifts($allow_employee_to_decline_shifts)
    {
        $this->container['allow_employee_to_decline_shifts'] = $allow_employee_to_decline_shifts;

        return $this;
    }

    /**
     * Gets allow_employee_bank_account_self_service
     *
     * @return bool
     */
    public function getAllowEmployeeBankAccountSelfService()
    {
        return $this->container['allow_employee_bank_account_self_service'];
    }

    /**
     * Sets allow_employee_bank_account_self_service
     *
     * @param bool $allow_employee_bank_account_self_service 
     *
     * @return $this
     */
    public function setAllowEmployeeBankAccountSelfService($allow_employee_bank_account_self_service)
    {
        $this->container['allow_employee_bank_account_self_service'] = $allow_employee_bank_account_self_service;

        return $this;
    }

    /**
     * Gets allow_employee_satisfaction_survey
     *
     * @return bool
     */
    public function getAllowEmployeeSatisfactionSurvey()
    {
        return $this->container['allow_employee_satisfaction_survey'];
    }

    /**
     * Sets allow_employee_satisfaction_survey
     *
     * @param bool $allow_employee_satisfaction_survey 
     *
     * @return $this
     */
    public function setAllowEmployeeSatisfactionSurvey($allow_employee_satisfaction_survey)
    {
        $this->container['allow_employee_satisfaction_survey'] = $allow_employee_satisfaction_survey;

        return $this;
    }

    /**
     * Gets allow_employees_to_view_all_approved_leave
     *
     * @return bool
     */
    public function getAllowEmployeesToViewAllApprovedLeave()
    {
        return $this->container['allow_employees_to_view_all_approved_leave'];
    }

    /**
     * Sets allow_employees_to_view_all_approved_leave
     *
     * @param bool $allow_employees_to_view_all_approved_leave 
     *
     * @return $this
     */
    public function setAllowEmployeesToViewAllApprovedLeave($allow_employees_to_view_all_approved_leave)
    {
        $this->container['allow_employees_to_view_all_approved_leave'] = $allow_employees_to_view_all_approved_leave;

        return $this;
    }

    /**
     * Gets unavailability_cut_off
     *
     * @return int
     */
    public function getUnavailabilityCutOff()
    {
        return $this->container['unavailability_cut_off'];
    }

    /**
     * Sets unavailability_cut_off
     *
     * @param int $unavailability_cut_off 
     *
     * @return $this
     */
    public function setUnavailabilityCutOff($unavailability_cut_off)
    {
        $this->container['unavailability_cut_off'] = $unavailability_cut_off;

        return $this;
    }

    /**
     * Gets allow_employees_to_upload_profile_picture
     *
     * @return bool
     */
    public function getAllowEmployeesToUploadProfilePicture()
    {
        return $this->container['allow_employees_to_upload_profile_picture'];
    }

    /**
     * Sets allow_employees_to_upload_profile_picture
     *
     * @param bool $allow_employees_to_upload_profile_picture 
     *
     * @return $this
     */
    public function setAllowEmployeesToUploadProfilePicture($allow_employees_to_upload_profile_picture)
    {
        $this->container['allow_employees_to_upload_profile_picture'] = $allow_employees_to_upload_profile_picture;

        return $this;
    }

    /**
     * Gets allow_employee_rostering_self_service
     *
     * @return bool
     */
    public function getAllowEmployeeRosteringSelfService()
    {
        return $this->container['allow_employee_rostering_self_service'];
    }

    /**
     * Sets allow_employee_rostering_self_service
     *
     * @param bool $allow_employee_rostering_self_service 
     *
     * @return $this
     */
    public function setAllowEmployeeRosteringSelfService($allow_employee_rostering_self_service)
    {
        $this->container['allow_employee_rostering_self_service'] = $allow_employee_rostering_self_service;

        return $this;
    }

    /**
     * Gets allow_employee_expenses_self_service
     *
     * @return bool
     */
    public function getAllowEmployeeExpensesSelfService()
    {
        return $this->container['allow_employee_expenses_self_service'];
    }

    /**
     * Sets allow_employee_expenses_self_service
     *
     * @param bool $allow_employee_expenses_self_service 
     *
     * @return $this
     */
    public function setAllowEmployeeExpensesSelfService($allow_employee_expenses_self_service)
    {
        $this->container['allow_employee_expenses_self_service'] = $allow_employee_expenses_self_service;

        return $this;
    }

    /**
     * Gets allow_employee_override_tax_codes
     *
     * @return bool
     */
    public function getAllowEmployeeOverrideTaxCodes()
    {
        return $this->container['allow_employee_override_tax_codes'];
    }

    /**
     * Sets allow_employee_override_tax_codes
     *
     * @param bool $allow_employee_override_tax_codes 
     *
     * @return $this
     */
    public function setAllowEmployeeOverrideTaxCodes($allow_employee_override_tax_codes)
    {
        $this->container['allow_employee_override_tax_codes'] = $allow_employee_override_tax_codes;

        return $this;
    }

    /**
     * Gets allow_employees_to_edit_kiosk_timesheets
     *
     * @return bool
     */
    public function getAllowEmployeesToEditKioskTimesheets()
    {
        return $this->container['allow_employees_to_edit_kiosk_timesheets'];
    }

    /**
     * Sets allow_employees_to_edit_kiosk_timesheets
     *
     * @param bool $allow_employees_to_edit_kiosk_timesheets 
     *
     * @return $this
     */
    public function setAllowEmployeesToEditKioskTimesheets($allow_employees_to_edit_kiosk_timesheets)
    {
        $this->container['allow_employees_to_edit_kiosk_timesheets'] = $allow_employees_to_edit_kiosk_timesheets;

        return $this;
    }

    /**
     * Gets ess_timesheet_setting
     *
     * @return string
     */
    public function getEssTimesheetSetting()
    {
        return $this->container['ess_timesheet_setting'];
    }

    /**
     * Sets ess_timesheet_setting
     *
     * @param string $ess_timesheet_setting 
     *
     * @return $this
     */
    public function setEssTimesheetSetting($ess_timesheet_setting)
    {
        $allowedValues = $this->getEssTimesheetSettingAllowableValues();
        if (!is_null($ess_timesheet_setting) && !in_array($ess_timesheet_setting, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'ess_timesheet_setting', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['ess_timesheet_setting'] = $ess_timesheet_setting;

        return $this;
    }

    /**
     * Gets employee_must_accept_shifts
     *
     * @return bool
     */
    public function getEmployeeMustAcceptShifts()
    {
        return $this->container['employee_must_accept_shifts'];
    }

    /**
     * Sets employee_must_accept_shifts
     *
     * @param bool $employee_must_accept_shifts 
     *
     * @return $this
     */
    public function setEmployeeMustAcceptShifts($employee_must_accept_shifts)
    {
        $this->container['employee_must_accept_shifts'] = $employee_must_accept_shifts;

        return $this;
    }

    /**
     * Gets allow_employee_timesheets_without_start_stop_times
     *
     * @return bool
     */
    public function getAllowEmployeeTimesheetsWithoutStartStopTimes()
    {
        return $this->container['allow_employee_timesheets_without_start_stop_times'];
    }

    /**
     * Sets allow_employee_timesheets_without_start_stop_times
     *
     * @param bool $allow_employee_timesheets_without_start_stop_times 
     *
     * @return $this
     */
    public function setAllowEmployeeTimesheetsWithoutStartStopTimes($allow_employee_timesheets_without_start_stop_times)
    {
        $this->container['allow_employee_timesheets_without_start_stop_times'] = $allow_employee_timesheets_without_start_stop_times;

        return $this;
    }

    /**
     * Gets allow_employee_to_swap_shifts
     *
     * @return bool
     */
    public function getAllowEmployeeToSwapShifts()
    {
        return $this->container['allow_employee_to_swap_shifts'];
    }

    /**
     * Sets allow_employee_to_swap_shifts
     *
     * @param bool $allow_employee_to_swap_shifts 
     *
     * @return $this
     */
    public function setAllowEmployeeToSwapShifts($allow_employee_to_swap_shifts)
    {
        $this->container['allow_employee_to_swap_shifts'] = $allow_employee_to_swap_shifts;

        return $this;
    }

    /**
     * Gets clock_on_require_photo
     *
     * @return bool
     */
    public function getClockOnRequirePhoto()
    {
        return $this->container['clock_on_require_photo'];
    }

    /**
     * Sets clock_on_require_photo
     *
     * @param bool $clock_on_require_photo 
     *
     * @return $this
     */
    public function setClockOnRequirePhoto($clock_on_require_photo)
    {
        $this->container['clock_on_require_photo'] = $clock_on_require_photo;

        return $this;
    }

    /**
     * Gets clock_on_allow_employee_shift_selection
     *
     * @return bool
     */
    public function getClockOnAllowEmployeeShiftSelection()
    {
        return $this->container['clock_on_allow_employee_shift_selection'];
    }

    /**
     * Sets clock_on_allow_employee_shift_selection
     *
     * @param bool $clock_on_allow_employee_shift_selection 
     *
     * @return $this
     */
    public function setClockOnAllowEmployeeShiftSelection($clock_on_allow_employee_shift_selection)
    {
        $this->container['clock_on_allow_employee_shift_selection'] = $clock_on_allow_employee_shift_selection;

        return $this;
    }

    /**
     * Gets clock_on_window_minutes
     *
     * @return int
     */
    public function getClockOnWindowMinutes()
    {
        return $this->container['clock_on_window_minutes'];
    }

    /**
     * Sets clock_on_window_minutes
     *
     * @param int $clock_on_window_minutes 
     *
     * @return $this
     */
    public function setClockOnWindowMinutes($clock_on_window_minutes)
    {
        $this->container['clock_on_window_minutes'] = $clock_on_window_minutes;

        return $this;
    }

    /**
     * Gets clock_off_window_minutes
     *
     * @return int
     */
    public function getClockOffWindowMinutes()
    {
        return $this->container['clock_off_window_minutes'];
    }

    /**
     * Sets clock_off_window_minutes
     *
     * @param int $clock_off_window_minutes 
     *
     * @return $this
     */
    public function setClockOffWindowMinutes($clock_off_window_minutes)
    {
        $this->container['clock_off_window_minutes'] = $clock_off_window_minutes;

        return $this;
    }

    /**
     * Gets timesheets_require_location
     *
     * @return bool
     */
    public function getTimesheetsRequireLocation()
    {
        return $this->container['timesheets_require_location'];
    }

    /**
     * Sets timesheets_require_location
     *
     * @param bool $timesheets_require_location 
     *
     * @return $this
     */
    public function setTimesheetsRequireLocation($timesheets_require_location)
    {
        $this->container['timesheets_require_location'] = $timesheets_require_location;

        return $this;
    }

    /**
     * Gets timesheets_require_work_type
     *
     * @return bool
     */
    public function getTimesheetsRequireWorkType()
    {
        return $this->container['timesheets_require_work_type'];
    }

    /**
     * Sets timesheets_require_work_type
     *
     * @param bool $timesheets_require_work_type 
     *
     * @return $this
     */
    public function setTimesheetsRequireWorkType($timesheets_require_work_type)
    {
        $this->container['timesheets_require_work_type'] = $timesheets_require_work_type;

        return $this;
    }

    /**
     * Gets enable_work_zone_clock_on
     *
     * @return bool
     */
    public function getEnableWorkZoneClockOn()
    {
        return $this->container['enable_work_zone_clock_on'];
    }

    /**
     * Sets enable_work_zone_clock_on
     *
     * @param bool $enable_work_zone_clock_on 
     *
     * @return $this
     */
    public function setEnableWorkZoneClockOn($enable_work_zone_clock_on)
    {
        $this->container['enable_work_zone_clock_on'] = $enable_work_zone_clock_on;

        return $this;
    }

    /**
     * Gets shift_bidding
     *
     * @return bool
     */
    public function getShiftBidding()
    {
        return $this->container['shift_bidding'];
    }

    /**
     * Sets shift_bidding
     *
     * @param bool $shift_bidding 
     *
     * @return $this
     */
    public function setShiftBidding($shift_bidding)
    {
        $this->container['shift_bidding'] = $shift_bidding;

        return $this;
    }

    /**
     * Gets allow_to_select_higher_classification
     *
     * @return bool
     */
    public function getAllowToSelectHigherClassification()
    {
        return $this->container['allow_to_select_higher_classification'];
    }

    /**
     * Sets allow_to_select_higher_classification
     *
     * @param bool $allow_to_select_higher_classification 
     *
     * @return $this
     */
    public function setAllowToSelectHigherClassification($allow_to_select_higher_classification)
    {
        $this->container['allow_to_select_higher_classification'] = $allow_to_select_higher_classification;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


