<?php
/**
 * AuEssEmployeeDetailsViewModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Australia
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: AU
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.21
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use ArrayAccess;
use Swagger\Client\ObjectSerializer;

/**
 * AuEssEmployeeDetailsViewModel Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class AuEssEmployeeDetailsViewModel implements ModelInterface, ArrayAccess
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'AuEssEmployeeDetailsViewModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'residential_address' => '\Swagger\Client\Model\AuAddressModel',
        'postal_address' => '\Swagger\Client\Model\AuAddressModel',
        'can_edit' => 'bool',
        'has_profile_image' => 'bool',
        'can_edit_profile_image' => 'bool',
        'anniversary_date' => '\DateTime',
        'start_date' => '\DateTime',
        'end_date' => '\DateTime',
        'id' => 'int',
        'title_id' => 'int',
        'first_name' => 'string',
        'other_name' => 'string',
        'middle_name' => 'string',
        'surname' => 'string',
        'previous_surname' => 'string',
        'date_of_birth' => '\DateTime',
        'gender' => 'string',
        'email' => 'string',
        'home_phone' => 'string',
        'work_phone' => 'string',
        'mobile_phone' => 'string',
        'is_postal_address_same_as_residential' => 'bool',
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'residential_address' => null,
        'postal_address' => null,
        'can_edit' => null,
        'has_profile_image' => null,
        'can_edit_profile_image' => null,
        'anniversary_date' => 'date-time',
        'start_date' => 'date-time',
        'end_date' => 'date-time',
        'id' => 'int32',
        'title_id' => 'int32',
        'first_name' => null,
        'other_name' => null,
        'middle_name' => null,
        'surname' => null,
        'previous_surname' => null,
        'date_of_birth' => 'date-time',
        'gender' => null,
        'email' => null,
        'home_phone' => null,
        'work_phone' => null,
        'mobile_phone' => null,
        'is_postal_address_same_as_residential' => null,
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'residential_address' => 'residentialAddress',
        'postal_address' => 'postalAddress',
        'can_edit' => 'canEdit',
        'has_profile_image' => 'hasProfileImage',
        'can_edit_profile_image' => 'canEditProfileImage',
        'anniversary_date' => 'anniversaryDate',
        'start_date' => 'startDate',
        'end_date' => 'endDate',
        'id' => 'id',
        'title_id' => 'titleId',
        'first_name' => 'firstName',
        'other_name' => 'otherName',
        'middle_name' => 'middleName',
        'surname' => 'surname',
        'previous_surname' => 'previousSurname',
        'date_of_birth' => 'dateOfBirth',
        'gender' => 'gender',
        'email' => 'email',
        'home_phone' => 'homePhone',
        'work_phone' => 'workPhone',
        'mobile_phone' => 'mobilePhone',
        'is_postal_address_same_as_residential' => 'isPostalAddressSameAsResidential',
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'residential_address' => 'setResidentialAddress',
        'postal_address' => 'setPostalAddress',
        'can_edit' => 'setCanEdit',
        'has_profile_image' => 'setHasProfileImage',
        'can_edit_profile_image' => 'setCanEditProfileImage',
        'anniversary_date' => 'setAnniversaryDate',
        'start_date' => 'setStartDate',
        'end_date' => 'setEndDate',
        'id' => 'setId',
        'title_id' => 'setTitleId',
        'first_name' => 'setFirstName',
        'other_name' => 'setOtherName',
        'middle_name' => 'setMiddleName',
        'surname' => 'setSurname',
        'previous_surname' => 'setPreviousSurname',
        'date_of_birth' => 'setDateOfBirth',
        'gender' => 'setGender',
        'email' => 'setEmail',
        'home_phone' => 'setHomePhone',
        'work_phone' => 'setWorkPhone',
        'mobile_phone' => 'setMobilePhone',
        'is_postal_address_same_as_residential' => 'setIsPostalAddressSameAsResidential',
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'residential_address' => 'getResidentialAddress',
        'postal_address' => 'getPostalAddress',
        'can_edit' => 'getCanEdit',
        'has_profile_image' => 'getHasProfileImage',
        'can_edit_profile_image' => 'getCanEditProfileImage',
        'anniversary_date' => 'getAnniversaryDate',
        'start_date' => 'getStartDate',
        'end_date' => 'getEndDate',
        'id' => 'getId',
        'title_id' => 'getTitleId',
        'first_name' => 'getFirstName',
        'other_name' => 'getOtherName',
        'middle_name' => 'getMiddleName',
        'surname' => 'getSurname',
        'previous_surname' => 'getPreviousSurname',
        'date_of_birth' => 'getDateOfBirth',
        'gender' => 'getGender',
        'email' => 'getEmail',
        'home_phone' => 'getHomePhone',
        'work_phone' => 'getWorkPhone',
        'mobile_phone' => 'getMobilePhone',
        'is_postal_address_same_as_residential' => 'getIsPostalAddressSameAsResidential',
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['residential_address'] = isset($data['residential_address']) ? $data['residential_address'] : null;
        $this->container['postal_address'] = isset($data['postal_address']) ? $data['postal_address'] : null;
        $this->container['can_edit'] = isset($data['can_edit']) ? $data['can_edit'] : null;
        $this->container['has_profile_image'] = isset($data['has_profile_image']) ? $data['has_profile_image'] : null;
        $this->container['can_edit_profile_image'] = isset($data['can_edit_profile_image']) ? $data['can_edit_profile_image'] : null;
        $this->container['anniversary_date'] = isset($data['anniversary_date']) ? $data['anniversary_date'] : null;
        $this->container['start_date'] = isset($data['start_date']) ? $data['start_date'] : null;
        $this->container['end_date'] = isset($data['end_date']) ? $data['end_date'] : null;
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['title_id'] = isset($data['title_id']) ? $data['title_id'] : null;
        $this->container['first_name'] = isset($data['first_name']) ? $data['first_name'] : null;
        $this->container['other_name'] = isset($data['other_name']) ? $data['other_name'] : null;
        $this->container['middle_name'] = isset($data['middle_name']) ? $data['middle_name'] : null;
        $this->container['surname'] = isset($data['surname']) ? $data['surname'] : null;
        $this->container['previous_surname'] = isset($data['previous_surname']) ? $data['previous_surname'] : null;
        $this->container['date_of_birth'] = isset($data['date_of_birth']) ? $data['date_of_birth'] : null;
        $this->container['gender'] = isset($data['gender']) ? $data['gender'] : null;
        $this->container['email'] = isset($data['email']) ? $data['email'] : null;
        $this->container['home_phone'] = isset($data['home_phone']) ? $data['home_phone'] : null;
        $this->container['work_phone'] = isset($data['work_phone']) ? $data['work_phone'] : null;
        $this->container['mobile_phone'] = isset($data['mobile_phone']) ? $data['mobile_phone'] : null;
        $this->container['is_postal_address_same_as_residential'] = isset($data['is_postal_address_same_as_residential']) ? $data['is_postal_address_same_as_residential'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }

    /**
     * Gets residential_address
     *
     * @return \Swagger\Client\Model\AuAddressModel
     */
    public function getResidentialAddress()
    {
        return $this->container['residential_address'];
    }

    /**
     * Sets residential_address
     *
     * @param \Swagger\Client\Model\AuAddressModel $residential_address
     *
     * @return $this
     */
    public function setResidentialAddress($residential_address)
    {
        $this->container['residential_address'] = $residential_address;

        return $this;
    }

    /**
     * Gets postal_address
     *
     * @return \Swagger\Client\Model\AuAddressModel
     */
    public function getPostalAddress()
    {
        return $this->container['postal_address'];
    }

    /**
     * Sets postal_address
     *
     * @param \Swagger\Client\Model\AuAddressModel $postal_address
     *
     * @return $this
     */
    public function setPostalAddress($postal_address)
    {
        $this->container['postal_address'] = $postal_address;

        return $this;
    }

    /**
     * Gets can_edit
     *
     * @return bool
     */
    public function getCanEdit()
    {
        return $this->container['can_edit'];
    }

    /**
     * Sets can_edit
     *
     * @param bool $can_edit
     *
     * @return $this
     */
    public function setCanEdit($can_edit)
    {
        $this->container['can_edit'] = $can_edit;

        return $this;
    }

    /**
     * Gets has_profile_image
     *
     * @return bool
     */
    public function getHasProfileImage()
    {
        return $this->container['has_profile_image'];
    }

    /**
     * Sets has_profile_image
     *
     * @param bool $has_profile_image
     *
     * @return $this
     */
    public function setHasProfileImage($has_profile_image)
    {
        $this->container['has_profile_image'] = $has_profile_image;

        return $this;
    }

    /**
     * Gets can_edit_profile_image
     *
     * @return bool
     */
    public function getCanEditProfileImage()
    {
        return $this->container['can_edit_profile_image'];
    }

    /**
     * Sets can_edit_profile_image
     *
     * @param bool $can_edit_profile_image
     *
     * @return $this
     */
    public function setCanEditProfileImage($can_edit_profile_image)
    {
        $this->container['can_edit_profile_image'] = $can_edit_profile_image;

        return $this;
    }

    /**
     * Gets anniversary_date
     *
     * @return \DateTime
     */
    public function getAnniversaryDate()
    {
        return $this->container['anniversary_date'];
    }

    /**
     * Sets anniversary_date
     *
     * @param \DateTime $anniversary_date
     *
     * @return $this
     */
    public function setAnniversaryDate($anniversary_date)
    {
        $this->container['anniversary_date'] = $anniversary_date;

        return $this;
    }

    /**
     * Gets start_date
     *
     * @return \DateTime
     */
    public function getStartDate()
    {
        return $this->container['start_date'];
    }

    /**
     * Sets start_date
     *
     * @param \DateTime $start_date
     *
     * @return $this
     */
    public function setStartDate($start_date)
    {
        $this->container['start_date'] = $start_date;

        return $this;
    }

    /**
     * Gets end_date
     *
     * @return \DateTime
     */
    public function getEndDate()
    {
        return $this->container['end_date'];
    }

    /**
     * Sets end_date
     *
     * @param \DateTime $end_date
     *
     * @return $this
     */
    public function setEndDate($end_date)
    {
        $this->container['end_date'] = $end_date;

        return $this;
    }

    /**
     * Gets id
     *
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int $id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets title_id
     *
     * @return int
     */
    public function getTitleId()
    {
        return $this->container['title_id'];
    }

    /**
     * Sets title_id
     *
     * @param int $title_id
     *
     * @return $this
     */
    public function setTitleId($title_id)
    {
        $this->container['title_id'] = $title_id;

        return $this;
    }

    /**
     * Gets first_name
     *
     * @return string
     */
    public function getFirstName()
    {
        return $this->container['first_name'];
    }

    /**
     * Sets first_name
     *
     * @param string $first_name
     *
     * @return $this
     */
    public function setFirstName($first_name)
    {
        $this->container['first_name'] = $first_name;

        return $this;
    }

    /**
     * Gets other_name
     *
     * @return string
     */
    public function getOtherName()
    {
        return $this->container['other_name'];
    }

    /**
     * Sets other_name
     *
     * @param string $other_name
     *
     * @return $this
     */
    public function setOtherName($other_name)
    {
        $this->container['other_name'] = $other_name;

        return $this;
    }

    /**
     * Gets middle_name
     *
     * @return string
     */
    public function getMiddleName()
    {
        return $this->container['middle_name'];
    }

    /**
     * Sets middle_name
     *
     * @param string $middle_name
     *
     * @return $this
     */
    public function setMiddleName($middle_name)
    {
        $this->container['middle_name'] = $middle_name;

        return $this;
    }

    /**
     * Gets surname
     *
     * @return string
     */
    public function getSurname()
    {
        return $this->container['surname'];
    }

    /**
     * Sets surname
     *
     * @param string $surname
     *
     * @return $this
     */
    public function setSurname($surname)
    {
        $this->container['surname'] = $surname;

        return $this;
    }

    /**
     * Gets previous_surname
     *
     * @return string
     */
    public function getPreviousSurname()
    {
        return $this->container['previous_surname'];
    }

    /**
     * Sets previous_surname
     *
     * @param string $previous_surname
     *
     * @return $this
     */
    public function setPreviousSurname($previous_surname)
    {
        $this->container['previous_surname'] = $previous_surname;

        return $this;
    }

    /**
     * Gets date_of_birth
     *
     * @return \DateTime
     */
    public function getDateOfBirth()
    {
        return $this->container['date_of_birth'];
    }

    /**
     * Sets date_of_birth
     *
     * @param \DateTime $date_of_birth
     *
     * @return $this
     */
    public function setDateOfBirth($date_of_birth)
    {
        $this->container['date_of_birth'] = $date_of_birth;

        return $this;
    }

    /**
     * Gets gender
     *
     * @return string
     */
    public function getGender()
    {
        return $this->container['gender'];
    }

    /**
     * Sets gender
     *
     * @param string $gender
     *
     * @return $this
     */
    public function setGender($gender)
    {
        $this->container['gender'] = $gender;

        return $this;
    }

    /**
     * Gets email
     *
     * @return string
     */
    public function getEmail()
    {
        return $this->container['email'];
    }

    /**
     * Sets email
     *
     * @param string $email
     *
     * @return $this
     */
    public function setEmail($email)
    {
        $this->container['email'] = $email;

        return $this;
    }

    /**
     * Gets home_phone
     *
     * @return string
     */
    public function getHomePhone()
    {
        return $this->container['home_phone'];
    }

    /**
     * Sets home_phone
     *
     * @param string $home_phone
     *
     * @return $this
     */
    public function setHomePhone($home_phone)
    {
        $this->container['home_phone'] = $home_phone;

        return $this;
    }

    /**
     * Gets work_phone
     *
     * @return string
     */
    public function getWorkPhone()
    {
        return $this->container['work_phone'];
    }

    /**
     * Sets work_phone
     *
     * @param string $work_phone
     *
     * @return $this
     */
    public function setWorkPhone($work_phone)
    {
        $this->container['work_phone'] = $work_phone;

        return $this;
    }

    /**
     * Gets mobile_phone
     *
     * @return string
     */
    public function getMobilePhone()
    {
        return $this->container['mobile_phone'];
    }

    /**
     * Sets mobile_phone
     *
     * @param string $mobile_phone
     *
     * @return $this
     */
    public function setMobilePhone($mobile_phone)
    {
        $this->container['mobile_phone'] = $mobile_phone;

        return $this;
    }

    /**
     * Gets is_postal_address_same_as_residential
     *
     * @return bool
     */
    public function getIsPostalAddressSameAsResidential()
    {
        return $this->container['is_postal_address_same_as_residential'];
    }

    /**
     * Sets is_postal_address_same_as_residential
     *
     * @param bool $is_postal_address_same_as_residential
     *
     * @return $this
     */
    public function setIsPostalAddressSameAsResidential($is_postal_address_same_as_residential)
    {
        $this->container['is_postal_address_same_as_residential'] = $is_postal_address_same_as_residential;

        return $this;
    }

    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param int $offset Offset
     *
     * @return bool
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param int $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param int $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
