<?php
/**
 * AuChartOfAccountsDefaultAccountsModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Australia
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: AU
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.21
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use ArrayAccess;
use Swagger\Client\ObjectSerializer;

/**
 * AuChartOfAccountsDefaultAccountsModel Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class AuChartOfAccountsDefaultAccountsModel implements ModelInterface, ArrayAccess
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'AuChartOfAccountsDefaultAccountsModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'payment_account_split_by_location' => 'bool',
        'default_expense_split_by_location' => 'bool',
        'employee_expense_split_by_location' => 'bool',
        'employer_liability_expense_split_by_location' => 'bool',
        'employer_liability_liability_split_by_location' => 'bool',
        'default_liability_split_by_location' => 'bool',
        'payg_liability_account_split_by_location' => 'bool',
        'payg_expense_split_by_location' => 'bool',
        'superannuation_expense_split_by_location' => 'bool',
        'superannuation_liability_split_by_location' => 'bool',
        'payg_liability_account_id' => 'int',
        'payg_expense_account_id' => 'int',
        'superannuation_expense_account_id' => 'int',
        'superannuation_liability_account_id' => 'int',
        'payment_account_id' => 'int',
        'default_expense_account_id' => 'int',
        'employee_expense_account_id' => 'int',
        'employer_liability_expense_account_id' => 'int',
        'employer_liability_liability_account_id' => 'int',
        'default_liability_account_id' => 'int',
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'payment_account_split_by_location' => null,
        'default_expense_split_by_location' => null,
        'employee_expense_split_by_location' => null,
        'employer_liability_expense_split_by_location' => null,
        'employer_liability_liability_split_by_location' => null,
        'default_liability_split_by_location' => null,
        'payg_liability_account_split_by_location' => null,
        'payg_expense_split_by_location' => null,
        'superannuation_expense_split_by_location' => null,
        'superannuation_liability_split_by_location' => null,
        'payg_liability_account_id' => 'int32',
        'payg_expense_account_id' => 'int32',
        'superannuation_expense_account_id' => 'int32',
        'superannuation_liability_account_id' => 'int32',
        'payment_account_id' => 'int32',
        'default_expense_account_id' => 'int32',
        'employee_expense_account_id' => 'int32',
        'employer_liability_expense_account_id' => 'int32',
        'employer_liability_liability_account_id' => 'int32',
        'default_liability_account_id' => 'int32',
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'payment_account_split_by_location' => 'paymentAccountSplitByLocation',
        'default_expense_split_by_location' => 'defaultExpenseSplitByLocation',
        'employee_expense_split_by_location' => 'employeeExpenseSplitByLocation',
        'employer_liability_expense_split_by_location' => 'employerLiabilityExpenseSplitByLocation',
        'employer_liability_liability_split_by_location' => 'employerLiabilityLiabilitySplitByLocation',
        'default_liability_split_by_location' => 'defaultLiabilitySplitByLocation',
        'payg_liability_account_split_by_location' => 'paygLiabilityAccountSplitByLocation',
        'payg_expense_split_by_location' => 'paygExpenseSplitByLocation',
        'superannuation_expense_split_by_location' => 'superannuationExpenseSplitByLocation',
        'superannuation_liability_split_by_location' => 'superannuationLiabilitySplitByLocation',
        'payg_liability_account_id' => 'paygLiabilityAccountId',
        'payg_expense_account_id' => 'paygExpenseAccountId',
        'superannuation_expense_account_id' => 'superannuationExpenseAccountId',
        'superannuation_liability_account_id' => 'superannuationLiabilityAccountId',
        'payment_account_id' => 'paymentAccountId',
        'default_expense_account_id' => 'defaultExpenseAccountId',
        'employee_expense_account_id' => 'employeeExpenseAccountId',
        'employer_liability_expense_account_id' => 'employerLiabilityExpenseAccountId',
        'employer_liability_liability_account_id' => 'employerLiabilityLiabilityAccountId',
        'default_liability_account_id' => 'defaultLiabilityAccountId',
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'payment_account_split_by_location' => 'setPaymentAccountSplitByLocation',
        'default_expense_split_by_location' => 'setDefaultExpenseSplitByLocation',
        'employee_expense_split_by_location' => 'setEmployeeExpenseSplitByLocation',
        'employer_liability_expense_split_by_location' => 'setEmployerLiabilityExpenseSplitByLocation',
        'employer_liability_liability_split_by_location' => 'setEmployerLiabilityLiabilitySplitByLocation',
        'default_liability_split_by_location' => 'setDefaultLiabilitySplitByLocation',
        'payg_liability_account_split_by_location' => 'setPaygLiabilityAccountSplitByLocation',
        'payg_expense_split_by_location' => 'setPaygExpenseSplitByLocation',
        'superannuation_expense_split_by_location' => 'setSuperannuationExpenseSplitByLocation',
        'superannuation_liability_split_by_location' => 'setSuperannuationLiabilitySplitByLocation',
        'payg_liability_account_id' => 'setPaygLiabilityAccountId',
        'payg_expense_account_id' => 'setPaygExpenseAccountId',
        'superannuation_expense_account_id' => 'setSuperannuationExpenseAccountId',
        'superannuation_liability_account_id' => 'setSuperannuationLiabilityAccountId',
        'payment_account_id' => 'setPaymentAccountId',
        'default_expense_account_id' => 'setDefaultExpenseAccountId',
        'employee_expense_account_id' => 'setEmployeeExpenseAccountId',
        'employer_liability_expense_account_id' => 'setEmployerLiabilityExpenseAccountId',
        'employer_liability_liability_account_id' => 'setEmployerLiabilityLiabilityAccountId',
        'default_liability_account_id' => 'setDefaultLiabilityAccountId',
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'payment_account_split_by_location' => 'getPaymentAccountSplitByLocation',
        'default_expense_split_by_location' => 'getDefaultExpenseSplitByLocation',
        'employee_expense_split_by_location' => 'getEmployeeExpenseSplitByLocation',
        'employer_liability_expense_split_by_location' => 'getEmployerLiabilityExpenseSplitByLocation',
        'employer_liability_liability_split_by_location' => 'getEmployerLiabilityLiabilitySplitByLocation',
        'default_liability_split_by_location' => 'getDefaultLiabilitySplitByLocation',
        'payg_liability_account_split_by_location' => 'getPaygLiabilityAccountSplitByLocation',
        'payg_expense_split_by_location' => 'getPaygExpenseSplitByLocation',
        'superannuation_expense_split_by_location' => 'getSuperannuationExpenseSplitByLocation',
        'superannuation_liability_split_by_location' => 'getSuperannuationLiabilitySplitByLocation',
        'payg_liability_account_id' => 'getPaygLiabilityAccountId',
        'payg_expense_account_id' => 'getPaygExpenseAccountId',
        'superannuation_expense_account_id' => 'getSuperannuationExpenseAccountId',
        'superannuation_liability_account_id' => 'getSuperannuationLiabilityAccountId',
        'payment_account_id' => 'getPaymentAccountId',
        'default_expense_account_id' => 'getDefaultExpenseAccountId',
        'employee_expense_account_id' => 'getEmployeeExpenseAccountId',
        'employer_liability_expense_account_id' => 'getEmployerLiabilityExpenseAccountId',
        'employer_liability_liability_account_id' => 'getEmployerLiabilityLiabilityAccountId',
        'default_liability_account_id' => 'getDefaultLiabilityAccountId',
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['payment_account_split_by_location'] = isset($data['payment_account_split_by_location']) ? $data['payment_account_split_by_location'] : null;
        $this->container['default_expense_split_by_location'] = isset($data['default_expense_split_by_location']) ? $data['default_expense_split_by_location'] : null;
        $this->container['employee_expense_split_by_location'] = isset($data['employee_expense_split_by_location']) ? $data['employee_expense_split_by_location'] : null;
        $this->container['employer_liability_expense_split_by_location'] = isset($data['employer_liability_expense_split_by_location']) ? $data['employer_liability_expense_split_by_location'] : null;
        $this->container['employer_liability_liability_split_by_location'] = isset($data['employer_liability_liability_split_by_location']) ? $data['employer_liability_liability_split_by_location'] : null;
        $this->container['default_liability_split_by_location'] = isset($data['default_liability_split_by_location']) ? $data['default_liability_split_by_location'] : null;
        $this->container['payg_liability_account_split_by_location'] = isset($data['payg_liability_account_split_by_location']) ? $data['payg_liability_account_split_by_location'] : null;
        $this->container['payg_expense_split_by_location'] = isset($data['payg_expense_split_by_location']) ? $data['payg_expense_split_by_location'] : null;
        $this->container['superannuation_expense_split_by_location'] = isset($data['superannuation_expense_split_by_location']) ? $data['superannuation_expense_split_by_location'] : null;
        $this->container['superannuation_liability_split_by_location'] = isset($data['superannuation_liability_split_by_location']) ? $data['superannuation_liability_split_by_location'] : null;
        $this->container['payg_liability_account_id'] = isset($data['payg_liability_account_id']) ? $data['payg_liability_account_id'] : null;
        $this->container['payg_expense_account_id'] = isset($data['payg_expense_account_id']) ? $data['payg_expense_account_id'] : null;
        $this->container['superannuation_expense_account_id'] = isset($data['superannuation_expense_account_id']) ? $data['superannuation_expense_account_id'] : null;
        $this->container['superannuation_liability_account_id'] = isset($data['superannuation_liability_account_id']) ? $data['superannuation_liability_account_id'] : null;
        $this->container['payment_account_id'] = isset($data['payment_account_id']) ? $data['payment_account_id'] : null;
        $this->container['default_expense_account_id'] = isset($data['default_expense_account_id']) ? $data['default_expense_account_id'] : null;
        $this->container['employee_expense_account_id'] = isset($data['employee_expense_account_id']) ? $data['employee_expense_account_id'] : null;
        $this->container['employer_liability_expense_account_id'] = isset($data['employer_liability_expense_account_id']) ? $data['employer_liability_expense_account_id'] : null;
        $this->container['employer_liability_liability_account_id'] = isset($data['employer_liability_liability_account_id']) ? $data['employer_liability_liability_account_id'] : null;
        $this->container['default_liability_account_id'] = isset($data['default_liability_account_id']) ? $data['default_liability_account_id'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }

    /**
     * Gets payment_account_split_by_location
     *
     * @return bool
     */
    public function getPaymentAccountSplitByLocation()
    {
        return $this->container['payment_account_split_by_location'];
    }

    /**
     * Sets payment_account_split_by_location
     *
     * @param bool $payment_account_split_by_location
     *
     * @return $this
     */
    public function setPaymentAccountSplitByLocation($payment_account_split_by_location)
    {
        $this->container['payment_account_split_by_location'] = $payment_account_split_by_location;

        return $this;
    }

    /**
     * Gets default_expense_split_by_location
     *
     * @return bool
     */
    public function getDefaultExpenseSplitByLocation()
    {
        return $this->container['default_expense_split_by_location'];
    }

    /**
     * Sets default_expense_split_by_location
     *
     * @param bool $default_expense_split_by_location
     *
     * @return $this
     */
    public function setDefaultExpenseSplitByLocation($default_expense_split_by_location)
    {
        $this->container['default_expense_split_by_location'] = $default_expense_split_by_location;

        return $this;
    }

    /**
     * Gets employee_expense_split_by_location
     *
     * @return bool
     */
    public function getEmployeeExpenseSplitByLocation()
    {
        return $this->container['employee_expense_split_by_location'];
    }

    /**
     * Sets employee_expense_split_by_location
     *
     * @param bool $employee_expense_split_by_location
     *
     * @return $this
     */
    public function setEmployeeExpenseSplitByLocation($employee_expense_split_by_location)
    {
        $this->container['employee_expense_split_by_location'] = $employee_expense_split_by_location;

        return $this;
    }

    /**
     * Gets employer_liability_expense_split_by_location
     *
     * @return bool
     */
    public function getEmployerLiabilityExpenseSplitByLocation()
    {
        return $this->container['employer_liability_expense_split_by_location'];
    }

    /**
     * Sets employer_liability_expense_split_by_location
     *
     * @param bool $employer_liability_expense_split_by_location
     *
     * @return $this
     */
    public function setEmployerLiabilityExpenseSplitByLocation($employer_liability_expense_split_by_location)
    {
        $this->container['employer_liability_expense_split_by_location'] = $employer_liability_expense_split_by_location;

        return $this;
    }

    /**
     * Gets employer_liability_liability_split_by_location
     *
     * @return bool
     */
    public function getEmployerLiabilityLiabilitySplitByLocation()
    {
        return $this->container['employer_liability_liability_split_by_location'];
    }

    /**
     * Sets employer_liability_liability_split_by_location
     *
     * @param bool $employer_liability_liability_split_by_location
     *
     * @return $this
     */
    public function setEmployerLiabilityLiabilitySplitByLocation($employer_liability_liability_split_by_location)
    {
        $this->container['employer_liability_liability_split_by_location'] = $employer_liability_liability_split_by_location;

        return $this;
    }

    /**
     * Gets default_liability_split_by_location
     *
     * @return bool
     */
    public function getDefaultLiabilitySplitByLocation()
    {
        return $this->container['default_liability_split_by_location'];
    }

    /**
     * Sets default_liability_split_by_location
     *
     * @param bool $default_liability_split_by_location
     *
     * @return $this
     */
    public function setDefaultLiabilitySplitByLocation($default_liability_split_by_location)
    {
        $this->container['default_liability_split_by_location'] = $default_liability_split_by_location;

        return $this;
    }

    /**
     * Gets payg_liability_account_split_by_location
     *
     * @return bool
     */
    public function getPaygLiabilityAccountSplitByLocation()
    {
        return $this->container['payg_liability_account_split_by_location'];
    }

    /**
     * Sets payg_liability_account_split_by_location
     *
     * @param bool $payg_liability_account_split_by_location
     *
     * @return $this
     */
    public function setPaygLiabilityAccountSplitByLocation($payg_liability_account_split_by_location)
    {
        $this->container['payg_liability_account_split_by_location'] = $payg_liability_account_split_by_location;

        return $this;
    }

    /**
     * Gets payg_expense_split_by_location
     *
     * @return bool
     */
    public function getPaygExpenseSplitByLocation()
    {
        return $this->container['payg_expense_split_by_location'];
    }

    /**
     * Sets payg_expense_split_by_location
     *
     * @param bool $payg_expense_split_by_location
     *
     * @return $this
     */
    public function setPaygExpenseSplitByLocation($payg_expense_split_by_location)
    {
        $this->container['payg_expense_split_by_location'] = $payg_expense_split_by_location;

        return $this;
    }

    /**
     * Gets superannuation_expense_split_by_location
     *
     * @return bool
     */
    public function getSuperannuationExpenseSplitByLocation()
    {
        return $this->container['superannuation_expense_split_by_location'];
    }

    /**
     * Sets superannuation_expense_split_by_location
     *
     * @param bool $superannuation_expense_split_by_location
     *
     * @return $this
     */
    public function setSuperannuationExpenseSplitByLocation($superannuation_expense_split_by_location)
    {
        $this->container['superannuation_expense_split_by_location'] = $superannuation_expense_split_by_location;

        return $this;
    }

    /**
     * Gets superannuation_liability_split_by_location
     *
     * @return bool
     */
    public function getSuperannuationLiabilitySplitByLocation()
    {
        return $this->container['superannuation_liability_split_by_location'];
    }

    /**
     * Sets superannuation_liability_split_by_location
     *
     * @param bool $superannuation_liability_split_by_location
     *
     * @return $this
     */
    public function setSuperannuationLiabilitySplitByLocation($superannuation_liability_split_by_location)
    {
        $this->container['superannuation_liability_split_by_location'] = $superannuation_liability_split_by_location;

        return $this;
    }

    /**
     * Gets payg_liability_account_id
     *
     * @return int
     */
    public function getPaygLiabilityAccountId()
    {
        return $this->container['payg_liability_account_id'];
    }

    /**
     * Sets payg_liability_account_id
     *
     * @param int $payg_liability_account_id
     *
     * @return $this
     */
    public function setPaygLiabilityAccountId($payg_liability_account_id)
    {
        $this->container['payg_liability_account_id'] = $payg_liability_account_id;

        return $this;
    }

    /**
     * Gets payg_expense_account_id
     *
     * @return int
     */
    public function getPaygExpenseAccountId()
    {
        return $this->container['payg_expense_account_id'];
    }

    /**
     * Sets payg_expense_account_id
     *
     * @param int $payg_expense_account_id
     *
     * @return $this
     */
    public function setPaygExpenseAccountId($payg_expense_account_id)
    {
        $this->container['payg_expense_account_id'] = $payg_expense_account_id;

        return $this;
    }

    /**
     * Gets superannuation_expense_account_id
     *
     * @return int
     */
    public function getSuperannuationExpenseAccountId()
    {
        return $this->container['superannuation_expense_account_id'];
    }

    /**
     * Sets superannuation_expense_account_id
     *
     * @param int $superannuation_expense_account_id
     *
     * @return $this
     */
    public function setSuperannuationExpenseAccountId($superannuation_expense_account_id)
    {
        $this->container['superannuation_expense_account_id'] = $superannuation_expense_account_id;

        return $this;
    }

    /**
     * Gets superannuation_liability_account_id
     *
     * @return int
     */
    public function getSuperannuationLiabilityAccountId()
    {
        return $this->container['superannuation_liability_account_id'];
    }

    /**
     * Sets superannuation_liability_account_id
     *
     * @param int $superannuation_liability_account_id
     *
     * @return $this
     */
    public function setSuperannuationLiabilityAccountId($superannuation_liability_account_id)
    {
        $this->container['superannuation_liability_account_id'] = $superannuation_liability_account_id;

        return $this;
    }

    /**
     * Gets payment_account_id
     *
     * @return int
     */
    public function getPaymentAccountId()
    {
        return $this->container['payment_account_id'];
    }

    /**
     * Sets payment_account_id
     *
     * @param int $payment_account_id
     *
     * @return $this
     */
    public function setPaymentAccountId($payment_account_id)
    {
        $this->container['payment_account_id'] = $payment_account_id;

        return $this;
    }

    /**
     * Gets default_expense_account_id
     *
     * @return int
     */
    public function getDefaultExpenseAccountId()
    {
        return $this->container['default_expense_account_id'];
    }

    /**
     * Sets default_expense_account_id
     *
     * @param int $default_expense_account_id
     *
     * @return $this
     */
    public function setDefaultExpenseAccountId($default_expense_account_id)
    {
        $this->container['default_expense_account_id'] = $default_expense_account_id;

        return $this;
    }

    /**
     * Gets employee_expense_account_id
     *
     * @return int
     */
    public function getEmployeeExpenseAccountId()
    {
        return $this->container['employee_expense_account_id'];
    }

    /**
     * Sets employee_expense_account_id
     *
     * @param int $employee_expense_account_id
     *
     * @return $this
     */
    public function setEmployeeExpenseAccountId($employee_expense_account_id)
    {
        $this->container['employee_expense_account_id'] = $employee_expense_account_id;

        return $this;
    }

    /**
     * Gets employer_liability_expense_account_id
     *
     * @return int
     */
    public function getEmployerLiabilityExpenseAccountId()
    {
        return $this->container['employer_liability_expense_account_id'];
    }

    /**
     * Sets employer_liability_expense_account_id
     *
     * @param int $employer_liability_expense_account_id
     *
     * @return $this
     */
    public function setEmployerLiabilityExpenseAccountId($employer_liability_expense_account_id)
    {
        $this->container['employer_liability_expense_account_id'] = $employer_liability_expense_account_id;

        return $this;
    }

    /**
     * Gets employer_liability_liability_account_id
     *
     * @return int
     */
    public function getEmployerLiabilityLiabilityAccountId()
    {
        return $this->container['employer_liability_liability_account_id'];
    }

    /**
     * Sets employer_liability_liability_account_id
     *
     * @param int $employer_liability_liability_account_id
     *
     * @return $this
     */
    public function setEmployerLiabilityLiabilityAccountId($employer_liability_liability_account_id)
    {
        $this->container['employer_liability_liability_account_id'] = $employer_liability_liability_account_id;

        return $this;
    }

    /**
     * Gets default_liability_account_id
     *
     * @return int
     */
    public function getDefaultLiabilityAccountId()
    {
        return $this->container['default_liability_account_id'];
    }

    /**
     * Sets default_liability_account_id
     *
     * @param int $default_liability_account_id
     *
     * @return $this
     */
    public function setDefaultLiabilityAccountId($default_liability_account_id)
    {
        $this->container['default_liability_account_id'] = $default_liability_account_id;

        return $this;
    }

    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param int $offset Offset
     *
     * @return bool
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param int $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param int $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
