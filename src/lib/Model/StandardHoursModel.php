<?php
/**
 * StandardHoursModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Australia
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: AU
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.21
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * StandardHoursModel Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class StandardHoursModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'StandardHoursModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'employee_id' => 'int',
        'standard_hours_per_week' => 'double',
        'standard_hours_per_day' => 'double',
        'use_advanced_work_week' => 'bool',
        'standard_work_days' => '\Swagger\Client\Model\StandardHoursDayModel[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'employee_id' => 'int32',
        'standard_hours_per_week' => 'double',
        'standard_hours_per_day' => 'double',
        'use_advanced_work_week' => null,
        'standard_work_days' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'employee_id' => 'employeeId',
        'standard_hours_per_week' => 'standardHoursPerWeek',
        'standard_hours_per_day' => 'standardHoursPerDay',
        'use_advanced_work_week' => 'useAdvancedWorkWeek',
        'standard_work_days' => 'standardWorkDays'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'employee_id' => 'setEmployeeId',
        'standard_hours_per_week' => 'setStandardHoursPerWeek',
        'standard_hours_per_day' => 'setStandardHoursPerDay',
        'use_advanced_work_week' => 'setUseAdvancedWorkWeek',
        'standard_work_days' => 'setStandardWorkDays'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'employee_id' => 'getEmployeeId',
        'standard_hours_per_week' => 'getStandardHoursPerWeek',
        'standard_hours_per_day' => 'getStandardHoursPerDay',
        'use_advanced_work_week' => 'getUseAdvancedWorkWeek',
        'standard_work_days' => 'getStandardWorkDays'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['employee_id'] = isset($data['employee_id']) ? $data['employee_id'] : null;
        $this->container['standard_hours_per_week'] = isset($data['standard_hours_per_week']) ? $data['standard_hours_per_week'] : null;
        $this->container['standard_hours_per_day'] = isset($data['standard_hours_per_day']) ? $data['standard_hours_per_day'] : null;
        $this->container['use_advanced_work_week'] = isset($data['use_advanced_work_week']) ? $data['use_advanced_work_week'] : null;
        $this->container['standard_work_days'] = isset($data['standard_work_days']) ? $data['standard_work_days'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets employee_id
     *
     * @return int
     */
    public function getEmployeeId()
    {
        return $this->container['employee_id'];
    }

    /**
     * Sets employee_id
     *
     * @param int $employee_id 
     *
     * @return $this
     */
    public function setEmployeeId($employee_id)
    {
        $this->container['employee_id'] = $employee_id;

        return $this;
    }

    /**
     * Gets standard_hours_per_week
     *
     * @return double
     */
    public function getStandardHoursPerWeek()
    {
        return $this->container['standard_hours_per_week'];
    }

    /**
     * Sets standard_hours_per_week
     *
     * @param double $standard_hours_per_week 
     *
     * @return $this
     */
    public function setStandardHoursPerWeek($standard_hours_per_week)
    {
        $this->container['standard_hours_per_week'] = $standard_hours_per_week;

        return $this;
    }

    /**
     * Gets standard_hours_per_day
     *
     * @return double
     */
    public function getStandardHoursPerDay()
    {
        return $this->container['standard_hours_per_day'];
    }

    /**
     * Sets standard_hours_per_day
     *
     * @param double $standard_hours_per_day 
     *
     * @return $this
     */
    public function setStandardHoursPerDay($standard_hours_per_day)
    {
        $this->container['standard_hours_per_day'] = $standard_hours_per_day;

        return $this;
    }

    /**
     * Gets use_advanced_work_week
     *
     * @return bool
     */
    public function getUseAdvancedWorkWeek()
    {
        return $this->container['use_advanced_work_week'];
    }

    /**
     * Sets use_advanced_work_week
     *
     * @param bool $use_advanced_work_week 
     *
     * @return $this
     */
    public function setUseAdvancedWorkWeek($use_advanced_work_week)
    {
        $this->container['use_advanced_work_week'] = $use_advanced_work_week;

        return $this;
    }

    /**
     * Gets standard_work_days
     *
     * @return \Swagger\Client\Model\StandardHoursDayModel[]
     */
    public function getStandardWorkDays()
    {
        return $this->container['standard_work_days'];
    }

    /**
     * Sets standard_work_days
     *
     * @param \Swagger\Client\Model\StandardHoursDayModel[] $standard_work_days 
     *
     * @return $this
     */
    public function setStandardWorkDays($standard_work_days)
    {
        $this->container['standard_work_days'] = $standard_work_days;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


