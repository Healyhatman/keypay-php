<?php
/**
 * AuApiPaySlipModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Australia
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: AU
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.21
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use ArrayAccess;
use Swagger\Client\ObjectSerializer;

/**
 * AuApiPaySlipModel Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class AuApiPaySlipModel implements ModelInterface, ArrayAccess
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'AuApiPaySlipModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'payg_adjustments' => '\Swagger\Client\Model\ApiPaySlipPaygAdjustmentModel[]',
        'super_adjustments' => '\Swagger\Client\Model\ApiPaySlipSuperAdjustmentModel[]',
        'super_payments' => '\Swagger\Client\Model\ApiPaySlipSuperPaymentModel[]',
        'bank_payments' => '\Swagger\Client\Model\AuApiPaySlipBankPaymentModel[]',
        'earnings_lines' => '\Swagger\Client\Model\AuApiPaySlipEarningsLineModel[]',
        'payg_withholding_amount' => 'double',
        'sfss_amount' => 'double',
        'help_amount' => 'double',
        'super_contribution' => 'double',
        'employee_postal_suburb_name' => 'string',
        'employee_postal_suburb_postcode' => 'string',
        'employee_postal_suburb_state' => 'string',
        'super_ytd' => 'double',
        'sfss_ytd' => 'double',
        'help_ytd' => 'double',
        'payg_ytd' => 'double',
        'abn' => 'string',
        'total_accrued_leave' => '\Swagger\Client\Model\ApiPaySlipLeaveModel[]',
        'accrued_leave' => '\Swagger\Client\Model\ApiPaySlipLeaveModel[]',
        'leave_taken' => '\Swagger\Client\Model\ApiPaySlipLeaveModel[]',
        'deductions' => '\Swagger\Client\Model\ApiPaySlipDeductionModel[]',
        'gross_ytd_details' => '\Swagger\Client\Model\ApiYearToDateEarningsBreakdownModel[]',
        'employee_expenses' => '\Swagger\Client\Model\ApiEmployeeExpenseGridModel[]',
        'total_hours' => 'double',
        'gross_earnings' => 'double',
        'net_earnings' => 'double',
        'taxable_earnings' => 'double',
        'post_tax_deduction_amount' => 'double',
        'pre_tax_deduction_amount' => 'double',
        'id' => 'int',
        'business_name' => 'string',
        'business_address' => 'string',
        'contact_name' => 'string',
        'pay_period_starting' => 'string',
        'pay_period_ending' => 'string',
        'message' => 'string',
        'employee_id' => 'int',
        'employee_external_id' => 'string',
        'employee_name' => 'string',
        'employee_first_name' => 'string',
        'employee_surname' => 'string',
        'employee_postal_street_address' => 'string',
        'employee_postal_address_line2' => 'string',
        'employee_postal_address_country' => 'string',
        'notation' => 'string',
        'is_published' => 'bool',
        'gross_ytd' => 'double',
        'net_ytd' => 'double',
        'withholding_ytd' => 'double',
        'base_pay_rate' => 'string',
        'base_rate' => 'string',
        'hourly_rate' => 'double',
        'pre_tax_deductions_ytd' => 'double',
        'post_tax_deductions_ytd' => 'double',
        'employee_base_rate' => 'double',
        'employee_base_rate_unit' => 'string',
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'payg_adjustments' => null,
        'super_adjustments' => null,
        'super_payments' => null,
        'bank_payments' => null,
        'earnings_lines' => null,
        'payg_withholding_amount' => 'double',
        'sfss_amount' => 'double',
        'help_amount' => 'double',
        'super_contribution' => 'double',
        'employee_postal_suburb_name' => null,
        'employee_postal_suburb_postcode' => null,
        'employee_postal_suburb_state' => null,
        'super_ytd' => 'double',
        'sfss_ytd' => 'double',
        'help_ytd' => 'double',
        'payg_ytd' => 'double',
        'abn' => null,
        'total_accrued_leave' => null,
        'accrued_leave' => null,
        'leave_taken' => null,
        'deductions' => null,
        'gross_ytd_details' => null,
        'employee_expenses' => null,
        'total_hours' => 'double',
        'gross_earnings' => 'double',
        'net_earnings' => 'double',
        'taxable_earnings' => 'double',
        'post_tax_deduction_amount' => 'double',
        'pre_tax_deduction_amount' => 'double',
        'id' => 'int32',
        'business_name' => null,
        'business_address' => null,
        'contact_name' => null,
        'pay_period_starting' => null,
        'pay_period_ending' => null,
        'message' => null,
        'employee_id' => 'int32',
        'employee_external_id' => null,
        'employee_name' => null,
        'employee_first_name' => null,
        'employee_surname' => null,
        'employee_postal_street_address' => null,
        'employee_postal_address_line2' => null,
        'employee_postal_address_country' => null,
        'notation' => null,
        'is_published' => null,
        'gross_ytd' => 'double',
        'net_ytd' => 'double',
        'withholding_ytd' => 'double',
        'base_pay_rate' => null,
        'base_rate' => null,
        'hourly_rate' => 'double',
        'pre_tax_deductions_ytd' => 'double',
        'post_tax_deductions_ytd' => 'double',
        'employee_base_rate' => 'double',
        'employee_base_rate_unit' => null,
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'payg_adjustments' => 'paygAdjustments',
        'super_adjustments' => 'superAdjustments',
        'super_payments' => 'superPayments',
        'bank_payments' => 'bankPayments',
        'earnings_lines' => 'earningsLines',
        'payg_withholding_amount' => 'paygWithholdingAmount',
        'sfss_amount' => 'sfssAmount',
        'help_amount' => 'helpAmount',
        'super_contribution' => 'superContribution',
        'employee_postal_suburb_name' => 'employeePostalSuburbName',
        'employee_postal_suburb_postcode' => 'employeePostalSuburbPostcode',
        'employee_postal_suburb_state' => 'employeePostalSuburbState',
        'super_ytd' => 'superYTD',
        'sfss_ytd' => 'sfssYTD',
        'help_ytd' => 'helpYTD',
        'payg_ytd' => 'paygYTD',
        'abn' => 'abn',
        'total_accrued_leave' => 'totalAccruedLeave',
        'accrued_leave' => 'accruedLeave',
        'leave_taken' => 'leaveTaken',
        'deductions' => 'deductions',
        'gross_ytd_details' => 'grossYTDDetails',
        'employee_expenses' => 'employeeExpenses',
        'total_hours' => 'totalHours',
        'gross_earnings' => 'grossEarnings',
        'net_earnings' => 'netEarnings',
        'taxable_earnings' => 'taxableEarnings',
        'post_tax_deduction_amount' => 'postTaxDeductionAmount',
        'pre_tax_deduction_amount' => 'preTaxDeductionAmount',
        'id' => 'id',
        'business_name' => 'businessName',
        'business_address' => 'businessAddress',
        'contact_name' => 'contactName',
        'pay_period_starting' => 'payPeriodStarting',
        'pay_period_ending' => 'payPeriodEnding',
        'message' => 'message',
        'employee_id' => 'employeeId',
        'employee_external_id' => 'employeeExternalId',
        'employee_name' => 'employeeName',
        'employee_first_name' => 'employeeFirstName',
        'employee_surname' => 'employeeSurname',
        'employee_postal_street_address' => 'employeePostalStreetAddress',
        'employee_postal_address_line2' => 'employeePostalAddressLine2',
        'employee_postal_address_country' => 'employeePostalAddressCountry',
        'notation' => 'notation',
        'is_published' => 'isPublished',
        'gross_ytd' => 'grossYTD',
        'net_ytd' => 'netYTD',
        'withholding_ytd' => 'withholdingYTD',
        'base_pay_rate' => 'basePayRate',
        'base_rate' => 'baseRate',
        'hourly_rate' => 'hourlyRate',
        'pre_tax_deductions_ytd' => 'preTaxDeductionsYTD',
        'post_tax_deductions_ytd' => 'postTaxDeductionsYTD',
        'employee_base_rate' => 'employeeBaseRate',
        'employee_base_rate_unit' => 'employeeBaseRateUnit',
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'payg_adjustments' => 'setPaygAdjustments',
        'super_adjustments' => 'setSuperAdjustments',
        'super_payments' => 'setSuperPayments',
        'bank_payments' => 'setBankPayments',
        'earnings_lines' => 'setEarningsLines',
        'payg_withholding_amount' => 'setPaygWithholdingAmount',
        'sfss_amount' => 'setSfssAmount',
        'help_amount' => 'setHelpAmount',
        'super_contribution' => 'setSuperContribution',
        'employee_postal_suburb_name' => 'setEmployeePostalSuburbName',
        'employee_postal_suburb_postcode' => 'setEmployeePostalSuburbPostcode',
        'employee_postal_suburb_state' => 'setEmployeePostalSuburbState',
        'super_ytd' => 'setSuperYtd',
        'sfss_ytd' => 'setSfssYtd',
        'help_ytd' => 'setHelpYtd',
        'payg_ytd' => 'setPaygYtd',
        'abn' => 'setAbn',
        'total_accrued_leave' => 'setTotalAccruedLeave',
        'accrued_leave' => 'setAccruedLeave',
        'leave_taken' => 'setLeaveTaken',
        'deductions' => 'setDeductions',
        'gross_ytd_details' => 'setGrossYtdDetails',
        'employee_expenses' => 'setEmployeeExpenses',
        'total_hours' => 'setTotalHours',
        'gross_earnings' => 'setGrossEarnings',
        'net_earnings' => 'setNetEarnings',
        'taxable_earnings' => 'setTaxableEarnings',
        'post_tax_deduction_amount' => 'setPostTaxDeductionAmount',
        'pre_tax_deduction_amount' => 'setPreTaxDeductionAmount',
        'id' => 'setId',
        'business_name' => 'setBusinessName',
        'business_address' => 'setBusinessAddress',
        'contact_name' => 'setContactName',
        'pay_period_starting' => 'setPayPeriodStarting',
        'pay_period_ending' => 'setPayPeriodEnding',
        'message' => 'setMessage',
        'employee_id' => 'setEmployeeId',
        'employee_external_id' => 'setEmployeeExternalId',
        'employee_name' => 'setEmployeeName',
        'employee_first_name' => 'setEmployeeFirstName',
        'employee_surname' => 'setEmployeeSurname',
        'employee_postal_street_address' => 'setEmployeePostalStreetAddress',
        'employee_postal_address_line2' => 'setEmployeePostalAddressLine2',
        'employee_postal_address_country' => 'setEmployeePostalAddressCountry',
        'notation' => 'setNotation',
        'is_published' => 'setIsPublished',
        'gross_ytd' => 'setGrossYtd',
        'net_ytd' => 'setNetYtd',
        'withholding_ytd' => 'setWithholdingYtd',
        'base_pay_rate' => 'setBasePayRate',
        'base_rate' => 'setBaseRate',
        'hourly_rate' => 'setHourlyRate',
        'pre_tax_deductions_ytd' => 'setPreTaxDeductionsYtd',
        'post_tax_deductions_ytd' => 'setPostTaxDeductionsYtd',
        'employee_base_rate' => 'setEmployeeBaseRate',
        'employee_base_rate_unit' => 'setEmployeeBaseRateUnit',
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'payg_adjustments' => 'getPaygAdjustments',
        'super_adjustments' => 'getSuperAdjustments',
        'super_payments' => 'getSuperPayments',
        'bank_payments' => 'getBankPayments',
        'earnings_lines' => 'getEarningsLines',
        'payg_withholding_amount' => 'getPaygWithholdingAmount',
        'sfss_amount' => 'getSfssAmount',
        'help_amount' => 'getHelpAmount',
        'super_contribution' => 'getSuperContribution',
        'employee_postal_suburb_name' => 'getEmployeePostalSuburbName',
        'employee_postal_suburb_postcode' => 'getEmployeePostalSuburbPostcode',
        'employee_postal_suburb_state' => 'getEmployeePostalSuburbState',
        'super_ytd' => 'getSuperYtd',
        'sfss_ytd' => 'getSfssYtd',
        'help_ytd' => 'getHelpYtd',
        'payg_ytd' => 'getPaygYtd',
        'abn' => 'getAbn',
        'total_accrued_leave' => 'getTotalAccruedLeave',
        'accrued_leave' => 'getAccruedLeave',
        'leave_taken' => 'getLeaveTaken',
        'deductions' => 'getDeductions',
        'gross_ytd_details' => 'getGrossYtdDetails',
        'employee_expenses' => 'getEmployeeExpenses',
        'total_hours' => 'getTotalHours',
        'gross_earnings' => 'getGrossEarnings',
        'net_earnings' => 'getNetEarnings',
        'taxable_earnings' => 'getTaxableEarnings',
        'post_tax_deduction_amount' => 'getPostTaxDeductionAmount',
        'pre_tax_deduction_amount' => 'getPreTaxDeductionAmount',
        'id' => 'getId',
        'business_name' => 'getBusinessName',
        'business_address' => 'getBusinessAddress',
        'contact_name' => 'getContactName',
        'pay_period_starting' => 'getPayPeriodStarting',
        'pay_period_ending' => 'getPayPeriodEnding',
        'message' => 'getMessage',
        'employee_id' => 'getEmployeeId',
        'employee_external_id' => 'getEmployeeExternalId',
        'employee_name' => 'getEmployeeName',
        'employee_first_name' => 'getEmployeeFirstName',
        'employee_surname' => 'getEmployeeSurname',
        'employee_postal_street_address' => 'getEmployeePostalStreetAddress',
        'employee_postal_address_line2' => 'getEmployeePostalAddressLine2',
        'employee_postal_address_country' => 'getEmployeePostalAddressCountry',
        'notation' => 'getNotation',
        'is_published' => 'getIsPublished',
        'gross_ytd' => 'getGrossYtd',
        'net_ytd' => 'getNetYtd',
        'withholding_ytd' => 'getWithholdingYtd',
        'base_pay_rate' => 'getBasePayRate',
        'base_rate' => 'getBaseRate',
        'hourly_rate' => 'getHourlyRate',
        'pre_tax_deductions_ytd' => 'getPreTaxDeductionsYtd',
        'post_tax_deductions_ytd' => 'getPostTaxDeductionsYtd',
        'employee_base_rate' => 'getEmployeeBaseRate',
        'employee_base_rate_unit' => 'getEmployeeBaseRateUnit',
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    public const EMPLOYEE_BASE_RATE_UNIT_HOURLY = 'Hourly';
    public const EMPLOYEE_BASE_RATE_UNIT_ANNUALLY = 'Annually';
    public const EMPLOYEE_BASE_RATE_UNIT_FIXED = 'Fixed';
    public const EMPLOYEE_BASE_RATE_UNIT_DAILY = 'Daily';
    public const EMPLOYEE_BASE_RATE_UNIT_MONTHLY = 'Monthly';

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getEmployeeBaseRateUnitAllowableValues()
    {
        return [
            self::EMPLOYEE_BASE_RATE_UNIT_HOURLY,
            self::EMPLOYEE_BASE_RATE_UNIT_ANNUALLY,
            self::EMPLOYEE_BASE_RATE_UNIT_FIXED,
            self::EMPLOYEE_BASE_RATE_UNIT_DAILY,
            self::EMPLOYEE_BASE_RATE_UNIT_MONTHLY,
        ];
    }

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['payg_adjustments'] = isset($data['payg_adjustments']) ? $data['payg_adjustments'] : null;
        $this->container['super_adjustments'] = isset($data['super_adjustments']) ? $data['super_adjustments'] : null;
        $this->container['super_payments'] = isset($data['super_payments']) ? $data['super_payments'] : null;
        $this->container['bank_payments'] = isset($data['bank_payments']) ? $data['bank_payments'] : null;
        $this->container['earnings_lines'] = isset($data['earnings_lines']) ? $data['earnings_lines'] : null;
        $this->container['payg_withholding_amount'] = isset($data['payg_withholding_amount']) ? $data['payg_withholding_amount'] : null;
        $this->container['sfss_amount'] = isset($data['sfss_amount']) ? $data['sfss_amount'] : null;
        $this->container['help_amount'] = isset($data['help_amount']) ? $data['help_amount'] : null;
        $this->container['super_contribution'] = isset($data['super_contribution']) ? $data['super_contribution'] : null;
        $this->container['employee_postal_suburb_name'] = isset($data['employee_postal_suburb_name']) ? $data['employee_postal_suburb_name'] : null;
        $this->container['employee_postal_suburb_postcode'] = isset($data['employee_postal_suburb_postcode']) ? $data['employee_postal_suburb_postcode'] : null;
        $this->container['employee_postal_suburb_state'] = isset($data['employee_postal_suburb_state']) ? $data['employee_postal_suburb_state'] : null;
        $this->container['super_ytd'] = isset($data['super_ytd']) ? $data['super_ytd'] : null;
        $this->container['sfss_ytd'] = isset($data['sfss_ytd']) ? $data['sfss_ytd'] : null;
        $this->container['help_ytd'] = isset($data['help_ytd']) ? $data['help_ytd'] : null;
        $this->container['payg_ytd'] = isset($data['payg_ytd']) ? $data['payg_ytd'] : null;
        $this->container['abn'] = isset($data['abn']) ? $data['abn'] : null;
        $this->container['total_accrued_leave'] = isset($data['total_accrued_leave']) ? $data['total_accrued_leave'] : null;
        $this->container['accrued_leave'] = isset($data['accrued_leave']) ? $data['accrued_leave'] : null;
        $this->container['leave_taken'] = isset($data['leave_taken']) ? $data['leave_taken'] : null;
        $this->container['deductions'] = isset($data['deductions']) ? $data['deductions'] : null;
        $this->container['gross_ytd_details'] = isset($data['gross_ytd_details']) ? $data['gross_ytd_details'] : null;
        $this->container['employee_expenses'] = isset($data['employee_expenses']) ? $data['employee_expenses'] : null;
        $this->container['total_hours'] = isset($data['total_hours']) ? $data['total_hours'] : null;
        $this->container['gross_earnings'] = isset($data['gross_earnings']) ? $data['gross_earnings'] : null;
        $this->container['net_earnings'] = isset($data['net_earnings']) ? $data['net_earnings'] : null;
        $this->container['taxable_earnings'] = isset($data['taxable_earnings']) ? $data['taxable_earnings'] : null;
        $this->container['post_tax_deduction_amount'] = isset($data['post_tax_deduction_amount']) ? $data['post_tax_deduction_amount'] : null;
        $this->container['pre_tax_deduction_amount'] = isset($data['pre_tax_deduction_amount']) ? $data['pre_tax_deduction_amount'] : null;
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['business_name'] = isset($data['business_name']) ? $data['business_name'] : null;
        $this->container['business_address'] = isset($data['business_address']) ? $data['business_address'] : null;
        $this->container['contact_name'] = isset($data['contact_name']) ? $data['contact_name'] : null;
        $this->container['pay_period_starting'] = isset($data['pay_period_starting']) ? $data['pay_period_starting'] : null;
        $this->container['pay_period_ending'] = isset($data['pay_period_ending']) ? $data['pay_period_ending'] : null;
        $this->container['message'] = isset($data['message']) ? $data['message'] : null;
        $this->container['employee_id'] = isset($data['employee_id']) ? $data['employee_id'] : null;
        $this->container['employee_external_id'] = isset($data['employee_external_id']) ? $data['employee_external_id'] : null;
        $this->container['employee_name'] = isset($data['employee_name']) ? $data['employee_name'] : null;
        $this->container['employee_first_name'] = isset($data['employee_first_name']) ? $data['employee_first_name'] : null;
        $this->container['employee_surname'] = isset($data['employee_surname']) ? $data['employee_surname'] : null;
        $this->container['employee_postal_street_address'] = isset($data['employee_postal_street_address']) ? $data['employee_postal_street_address'] : null;
        $this->container['employee_postal_address_line2'] = isset($data['employee_postal_address_line2']) ? $data['employee_postal_address_line2'] : null;
        $this->container['employee_postal_address_country'] = isset($data['employee_postal_address_country']) ? $data['employee_postal_address_country'] : null;
        $this->container['notation'] = isset($data['notation']) ? $data['notation'] : null;
        $this->container['is_published'] = isset($data['is_published']) ? $data['is_published'] : null;
        $this->container['gross_ytd'] = isset($data['gross_ytd']) ? $data['gross_ytd'] : null;
        $this->container['net_ytd'] = isset($data['net_ytd']) ? $data['net_ytd'] : null;
        $this->container['withholding_ytd'] = isset($data['withholding_ytd']) ? $data['withholding_ytd'] : null;
        $this->container['base_pay_rate'] = isset($data['base_pay_rate']) ? $data['base_pay_rate'] : null;
        $this->container['base_rate'] = isset($data['base_rate']) ? $data['base_rate'] : null;
        $this->container['hourly_rate'] = isset($data['hourly_rate']) ? $data['hourly_rate'] : null;
        $this->container['pre_tax_deductions_ytd'] = isset($data['pre_tax_deductions_ytd']) ? $data['pre_tax_deductions_ytd'] : null;
        $this->container['post_tax_deductions_ytd'] = isset($data['post_tax_deductions_ytd']) ? $data['post_tax_deductions_ytd'] : null;
        $this->container['employee_base_rate'] = isset($data['employee_base_rate']) ? $data['employee_base_rate'] : null;
        $this->container['employee_base_rate_unit'] = isset($data['employee_base_rate_unit']) ? $data['employee_base_rate_unit'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        $allowedValues = $this->getEmployeeBaseRateUnitAllowableValues();
        if (! is_null($this->container['employee_base_rate_unit']) && ! in_array($this->container['employee_base_rate_unit'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'employee_base_rate_unit', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }

    /**
     * Gets payg_adjustments
     *
     * @return \Swagger\Client\Model\ApiPaySlipPaygAdjustmentModel[]
     */
    public function getPaygAdjustments()
    {
        return $this->container['payg_adjustments'];
    }

    /**
     * Sets payg_adjustments
     *
     * @param \Swagger\Client\Model\ApiPaySlipPaygAdjustmentModel[] $payg_adjustments
     *
     * @return $this
     */
    public function setPaygAdjustments($payg_adjustments)
    {
        $this->container['payg_adjustments'] = $payg_adjustments;

        return $this;
    }

    /**
     * Gets super_adjustments
     *
     * @return \Swagger\Client\Model\ApiPaySlipSuperAdjustmentModel[]
     */
    public function getSuperAdjustments()
    {
        return $this->container['super_adjustments'];
    }

    /**
     * Sets super_adjustments
     *
     * @param \Swagger\Client\Model\ApiPaySlipSuperAdjustmentModel[] $super_adjustments
     *
     * @return $this
     */
    public function setSuperAdjustments($super_adjustments)
    {
        $this->container['super_adjustments'] = $super_adjustments;

        return $this;
    }

    /**
     * Gets super_payments
     *
     * @return \Swagger\Client\Model\ApiPaySlipSuperPaymentModel[]
     */
    public function getSuperPayments()
    {
        return $this->container['super_payments'];
    }

    /**
     * Sets super_payments
     *
     * @param \Swagger\Client\Model\ApiPaySlipSuperPaymentModel[] $super_payments
     *
     * @return $this
     */
    public function setSuperPayments($super_payments)
    {
        $this->container['super_payments'] = $super_payments;

        return $this;
    }

    /**
     * Gets bank_payments
     *
     * @return \Swagger\Client\Model\AuApiPaySlipBankPaymentModel[]
     */
    public function getBankPayments()
    {
        return $this->container['bank_payments'];
    }

    /**
     * Sets bank_payments
     *
     * @param \Swagger\Client\Model\AuApiPaySlipBankPaymentModel[] $bank_payments
     *
     * @return $this
     */
    public function setBankPayments($bank_payments)
    {
        $this->container['bank_payments'] = $bank_payments;

        return $this;
    }

    /**
     * Gets earnings_lines
     *
     * @return \Swagger\Client\Model\AuApiPaySlipEarningsLineModel[]
     */
    public function getEarningsLines()
    {
        return $this->container['earnings_lines'];
    }

    /**
     * Sets earnings_lines
     *
     * @param \Swagger\Client\Model\AuApiPaySlipEarningsLineModel[] $earnings_lines
     *
     * @return $this
     */
    public function setEarningsLines($earnings_lines)
    {
        $this->container['earnings_lines'] = $earnings_lines;

        return $this;
    }

    /**
     * Gets payg_withholding_amount
     *
     * @return float
     */
    public function getPaygWithholdingAmount()
    {
        return $this->container['payg_withholding_amount'];
    }

    /**
     * Sets payg_withholding_amount
     *
     * @param float $payg_withholding_amount
     *
     * @return $this
     */
    public function setPaygWithholdingAmount($payg_withholding_amount)
    {
        $this->container['payg_withholding_amount'] = $payg_withholding_amount;

        return $this;
    }

    /**
     * Gets sfss_amount
     *
     * @return float
     */
    public function getSfssAmount()
    {
        return $this->container['sfss_amount'];
    }

    /**
     * Sets sfss_amount
     *
     * @param float $sfss_amount
     *
     * @return $this
     */
    public function setSfssAmount($sfss_amount)
    {
        $this->container['sfss_amount'] = $sfss_amount;

        return $this;
    }

    /**
     * Gets help_amount
     *
     * @return float
     */
    public function getHelpAmount()
    {
        return $this->container['help_amount'];
    }

    /**
     * Sets help_amount
     *
     * @param float $help_amount
     *
     * @return $this
     */
    public function setHelpAmount($help_amount)
    {
        $this->container['help_amount'] = $help_amount;

        return $this;
    }

    /**
     * Gets super_contribution
     *
     * @return float
     */
    public function getSuperContribution()
    {
        return $this->container['super_contribution'];
    }

    /**
     * Sets super_contribution
     *
     * @param float $super_contribution
     *
     * @return $this
     */
    public function setSuperContribution($super_contribution)
    {
        $this->container['super_contribution'] = $super_contribution;

        return $this;
    }

    /**
     * Gets employee_postal_suburb_name
     *
     * @return string
     */
    public function getEmployeePostalSuburbName()
    {
        return $this->container['employee_postal_suburb_name'];
    }

    /**
     * Sets employee_postal_suburb_name
     *
     * @param string $employee_postal_suburb_name
     *
     * @return $this
     */
    public function setEmployeePostalSuburbName($employee_postal_suburb_name)
    {
        $this->container['employee_postal_suburb_name'] = $employee_postal_suburb_name;

        return $this;
    }

    /**
     * Gets employee_postal_suburb_postcode
     *
     * @return string
     */
    public function getEmployeePostalSuburbPostcode()
    {
        return $this->container['employee_postal_suburb_postcode'];
    }

    /**
     * Sets employee_postal_suburb_postcode
     *
     * @param string $employee_postal_suburb_postcode
     *
     * @return $this
     */
    public function setEmployeePostalSuburbPostcode($employee_postal_suburb_postcode)
    {
        $this->container['employee_postal_suburb_postcode'] = $employee_postal_suburb_postcode;

        return $this;
    }

    /**
     * Gets employee_postal_suburb_state
     *
     * @return string
     */
    public function getEmployeePostalSuburbState()
    {
        return $this->container['employee_postal_suburb_state'];
    }

    /**
     * Sets employee_postal_suburb_state
     *
     * @param string $employee_postal_suburb_state
     *
     * @return $this
     */
    public function setEmployeePostalSuburbState($employee_postal_suburb_state)
    {
        $this->container['employee_postal_suburb_state'] = $employee_postal_suburb_state;

        return $this;
    }

    /**
     * Gets super_ytd
     *
     * @return float
     */
    public function getSuperYtd()
    {
        return $this->container['super_ytd'];
    }

    /**
     * Sets super_ytd
     *
     * @param float $super_ytd
     *
     * @return $this
     */
    public function setSuperYtd($super_ytd)
    {
        $this->container['super_ytd'] = $super_ytd;

        return $this;
    }

    /**
     * Gets sfss_ytd
     *
     * @return float
     */
    public function getSfssYtd()
    {
        return $this->container['sfss_ytd'];
    }

    /**
     * Sets sfss_ytd
     *
     * @param float $sfss_ytd
     *
     * @return $this
     */
    public function setSfssYtd($sfss_ytd)
    {
        $this->container['sfss_ytd'] = $sfss_ytd;

        return $this;
    }

    /**
     * Gets help_ytd
     *
     * @return float
     */
    public function getHelpYtd()
    {
        return $this->container['help_ytd'];
    }

    /**
     * Sets help_ytd
     *
     * @param float $help_ytd
     *
     * @return $this
     */
    public function setHelpYtd($help_ytd)
    {
        $this->container['help_ytd'] = $help_ytd;

        return $this;
    }

    /**
     * Gets payg_ytd
     *
     * @return float
     */
    public function getPaygYtd()
    {
        return $this->container['payg_ytd'];
    }

    /**
     * Sets payg_ytd
     *
     * @param float $payg_ytd
     *
     * @return $this
     */
    public function setPaygYtd($payg_ytd)
    {
        $this->container['payg_ytd'] = $payg_ytd;

        return $this;
    }

    /**
     * Gets abn
     *
     * @return string
     */
    public function getAbn()
    {
        return $this->container['abn'];
    }

    /**
     * Sets abn
     *
     * @param string $abn
     *
     * @return $this
     */
    public function setAbn($abn)
    {
        $this->container['abn'] = $abn;

        return $this;
    }

    /**
     * Gets total_accrued_leave
     *
     * @return \Swagger\Client\Model\ApiPaySlipLeaveModel[]
     */
    public function getTotalAccruedLeave()
    {
        return $this->container['total_accrued_leave'];
    }

    /**
     * Sets total_accrued_leave
     *
     * @param \Swagger\Client\Model\ApiPaySlipLeaveModel[] $total_accrued_leave
     *
     * @return $this
     */
    public function setTotalAccruedLeave($total_accrued_leave)
    {
        $this->container['total_accrued_leave'] = $total_accrued_leave;

        return $this;
    }

    /**
     * Gets accrued_leave
     *
     * @return \Swagger\Client\Model\ApiPaySlipLeaveModel[]
     */
    public function getAccruedLeave()
    {
        return $this->container['accrued_leave'];
    }

    /**
     * Sets accrued_leave
     *
     * @param \Swagger\Client\Model\ApiPaySlipLeaveModel[] $accrued_leave
     *
     * @return $this
     */
    public function setAccruedLeave($accrued_leave)
    {
        $this->container['accrued_leave'] = $accrued_leave;

        return $this;
    }

    /**
     * Gets leave_taken
     *
     * @return \Swagger\Client\Model\ApiPaySlipLeaveModel[]
     */
    public function getLeaveTaken()
    {
        return $this->container['leave_taken'];
    }

    /**
     * Sets leave_taken
     *
     * @param \Swagger\Client\Model\ApiPaySlipLeaveModel[] $leave_taken
     *
     * @return $this
     */
    public function setLeaveTaken($leave_taken)
    {
        $this->container['leave_taken'] = $leave_taken;

        return $this;
    }

    /**
     * Gets deductions
     *
     * @return \Swagger\Client\Model\ApiPaySlipDeductionModel[]
     */
    public function getDeductions()
    {
        return $this->container['deductions'];
    }

    /**
     * Sets deductions
     *
     * @param \Swagger\Client\Model\ApiPaySlipDeductionModel[] $deductions
     *
     * @return $this
     */
    public function setDeductions($deductions)
    {
        $this->container['deductions'] = $deductions;

        return $this;
    }

    /**
     * Gets gross_ytd_details
     *
     * @return \Swagger\Client\Model\ApiYearToDateEarningsBreakdownModel[]
     */
    public function getGrossYtdDetails()
    {
        return $this->container['gross_ytd_details'];
    }

    /**
     * Sets gross_ytd_details
     *
     * @param \Swagger\Client\Model\ApiYearToDateEarningsBreakdownModel[] $gross_ytd_details
     *
     * @return $this
     */
    public function setGrossYtdDetails($gross_ytd_details)
    {
        $this->container['gross_ytd_details'] = $gross_ytd_details;

        return $this;
    }

    /**
     * Gets employee_expenses
     *
     * @return \Swagger\Client\Model\ApiEmployeeExpenseGridModel[]
     */
    public function getEmployeeExpenses()
    {
        return $this->container['employee_expenses'];
    }

    /**
     * Sets employee_expenses
     *
     * @param \Swagger\Client\Model\ApiEmployeeExpenseGridModel[] $employee_expenses
     *
     * @return $this
     */
    public function setEmployeeExpenses($employee_expenses)
    {
        $this->container['employee_expenses'] = $employee_expenses;

        return $this;
    }

    /**
     * Gets total_hours
     *
     * @return float
     */
    public function getTotalHours()
    {
        return $this->container['total_hours'];
    }

    /**
     * Sets total_hours
     *
     * @param float $total_hours
     *
     * @return $this
     */
    public function setTotalHours($total_hours)
    {
        $this->container['total_hours'] = $total_hours;

        return $this;
    }

    /**
     * Gets gross_earnings
     *
     * @return float
     */
    public function getGrossEarnings()
    {
        return $this->container['gross_earnings'];
    }

    /**
     * Sets gross_earnings
     *
     * @param float $gross_earnings
     *
     * @return $this
     */
    public function setGrossEarnings($gross_earnings)
    {
        $this->container['gross_earnings'] = $gross_earnings;

        return $this;
    }

    /**
     * Gets net_earnings
     *
     * @return float
     */
    public function getNetEarnings()
    {
        return $this->container['net_earnings'];
    }

    /**
     * Sets net_earnings
     *
     * @param float $net_earnings
     *
     * @return $this
     */
    public function setNetEarnings($net_earnings)
    {
        $this->container['net_earnings'] = $net_earnings;

        return $this;
    }

    /**
     * Gets taxable_earnings
     *
     * @return float
     */
    public function getTaxableEarnings()
    {
        return $this->container['taxable_earnings'];
    }

    /**
     * Sets taxable_earnings
     *
     * @param float $taxable_earnings
     *
     * @return $this
     */
    public function setTaxableEarnings($taxable_earnings)
    {
        $this->container['taxable_earnings'] = $taxable_earnings;

        return $this;
    }

    /**
     * Gets post_tax_deduction_amount
     *
     * @return float
     */
    public function getPostTaxDeductionAmount()
    {
        return $this->container['post_tax_deduction_amount'];
    }

    /**
     * Sets post_tax_deduction_amount
     *
     * @param float $post_tax_deduction_amount
     *
     * @return $this
     */
    public function setPostTaxDeductionAmount($post_tax_deduction_amount)
    {
        $this->container['post_tax_deduction_amount'] = $post_tax_deduction_amount;

        return $this;
    }

    /**
     * Gets pre_tax_deduction_amount
     *
     * @return float
     */
    public function getPreTaxDeductionAmount()
    {
        return $this->container['pre_tax_deduction_amount'];
    }

    /**
     * Sets pre_tax_deduction_amount
     *
     * @param float $pre_tax_deduction_amount
     *
     * @return $this
     */
    public function setPreTaxDeductionAmount($pre_tax_deduction_amount)
    {
        $this->container['pre_tax_deduction_amount'] = $pre_tax_deduction_amount;

        return $this;
    }

    /**
     * Gets id
     *
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int $id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets business_name
     *
     * @return string
     */
    public function getBusinessName()
    {
        return $this->container['business_name'];
    }

    /**
     * Sets business_name
     *
     * @param string $business_name
     *
     * @return $this
     */
    public function setBusinessName($business_name)
    {
        $this->container['business_name'] = $business_name;

        return $this;
    }

    /**
     * Gets business_address
     *
     * @return string
     */
    public function getBusinessAddress()
    {
        return $this->container['business_address'];
    }

    /**
     * Sets business_address
     *
     * @param string $business_address
     *
     * @return $this
     */
    public function setBusinessAddress($business_address)
    {
        $this->container['business_address'] = $business_address;

        return $this;
    }

    /**
     * Gets contact_name
     *
     * @return string
     */
    public function getContactName()
    {
        return $this->container['contact_name'];
    }

    /**
     * Sets contact_name
     *
     * @param string $contact_name
     *
     * @return $this
     */
    public function setContactName($contact_name)
    {
        $this->container['contact_name'] = $contact_name;

        return $this;
    }

    /**
     * Gets pay_period_starting
     *
     * @return string
     */
    public function getPayPeriodStarting()
    {
        return $this->container['pay_period_starting'];
    }

    /**
     * Sets pay_period_starting
     *
     * @param string $pay_period_starting
     *
     * @return $this
     */
    public function setPayPeriodStarting($pay_period_starting)
    {
        $this->container['pay_period_starting'] = $pay_period_starting;

        return $this;
    }

    /**
     * Gets pay_period_ending
     *
     * @return string
     */
    public function getPayPeriodEnding()
    {
        return $this->container['pay_period_ending'];
    }

    /**
     * Sets pay_period_ending
     *
     * @param string $pay_period_ending
     *
     * @return $this
     */
    public function setPayPeriodEnding($pay_period_ending)
    {
        $this->container['pay_period_ending'] = $pay_period_ending;

        return $this;
    }

    /**
     * Gets message
     *
     * @return string
     */
    public function getMessage()
    {
        return $this->container['message'];
    }

    /**
     * Sets message
     *
     * @param string $message
     *
     * @return $this
     */
    public function setMessage($message)
    {
        $this->container['message'] = $message;

        return $this;
    }

    /**
     * Gets employee_id
     *
     * @return int
     */
    public function getEmployeeId()
    {
        return $this->container['employee_id'];
    }

    /**
     * Sets employee_id
     *
     * @param int $employee_id
     *
     * @return $this
     */
    public function setEmployeeId($employee_id)
    {
        $this->container['employee_id'] = $employee_id;

        return $this;
    }

    /**
     * Gets employee_external_id
     *
     * @return string
     */
    public function getEmployeeExternalId()
    {
        return $this->container['employee_external_id'];
    }

    /**
     * Sets employee_external_id
     *
     * @param string $employee_external_id
     *
     * @return $this
     */
    public function setEmployeeExternalId($employee_external_id)
    {
        $this->container['employee_external_id'] = $employee_external_id;

        return $this;
    }

    /**
     * Gets employee_name
     *
     * @return string
     */
    public function getEmployeeName()
    {
        return $this->container['employee_name'];
    }

    /**
     * Sets employee_name
     *
     * @param string $employee_name
     *
     * @return $this
     */
    public function setEmployeeName($employee_name)
    {
        $this->container['employee_name'] = $employee_name;

        return $this;
    }

    /**
     * Gets employee_first_name
     *
     * @return string
     */
    public function getEmployeeFirstName()
    {
        return $this->container['employee_first_name'];
    }

    /**
     * Sets employee_first_name
     *
     * @param string $employee_first_name
     *
     * @return $this
     */
    public function setEmployeeFirstName($employee_first_name)
    {
        $this->container['employee_first_name'] = $employee_first_name;

        return $this;
    }

    /**
     * Gets employee_surname
     *
     * @return string
     */
    public function getEmployeeSurname()
    {
        return $this->container['employee_surname'];
    }

    /**
     * Sets employee_surname
     *
     * @param string $employee_surname
     *
     * @return $this
     */
    public function setEmployeeSurname($employee_surname)
    {
        $this->container['employee_surname'] = $employee_surname;

        return $this;
    }

    /**
     * Gets employee_postal_street_address
     *
     * @return string
     */
    public function getEmployeePostalStreetAddress()
    {
        return $this->container['employee_postal_street_address'];
    }

    /**
     * Sets employee_postal_street_address
     *
     * @param string $employee_postal_street_address
     *
     * @return $this
     */
    public function setEmployeePostalStreetAddress($employee_postal_street_address)
    {
        $this->container['employee_postal_street_address'] = $employee_postal_street_address;

        return $this;
    }

    /**
     * Gets employee_postal_address_line2
     *
     * @return string
     */
    public function getEmployeePostalAddressLine2()
    {
        return $this->container['employee_postal_address_line2'];
    }

    /**
     * Sets employee_postal_address_line2
     *
     * @param string $employee_postal_address_line2
     *
     * @return $this
     */
    public function setEmployeePostalAddressLine2($employee_postal_address_line2)
    {
        $this->container['employee_postal_address_line2'] = $employee_postal_address_line2;

        return $this;
    }

    /**
     * Gets employee_postal_address_country
     *
     * @return string
     */
    public function getEmployeePostalAddressCountry()
    {
        return $this->container['employee_postal_address_country'];
    }

    /**
     * Sets employee_postal_address_country
     *
     * @param string $employee_postal_address_country
     *
     * @return $this
     */
    public function setEmployeePostalAddressCountry($employee_postal_address_country)
    {
        $this->container['employee_postal_address_country'] = $employee_postal_address_country;

        return $this;
    }

    /**
     * Gets notation
     *
     * @return string
     */
    public function getNotation()
    {
        return $this->container['notation'];
    }

    /**
     * Sets notation
     *
     * @param string $notation
     *
     * @return $this
     */
    public function setNotation($notation)
    {
        $this->container['notation'] = $notation;

        return $this;
    }

    /**
     * Gets is_published
     *
     * @return bool
     */
    public function getIsPublished()
    {
        return $this->container['is_published'];
    }

    /**
     * Sets is_published
     *
     * @param bool $is_published
     *
     * @return $this
     */
    public function setIsPublished($is_published)
    {
        $this->container['is_published'] = $is_published;

        return $this;
    }

    /**
     * Gets gross_ytd
     *
     * @return float
     */
    public function getGrossYtd()
    {
        return $this->container['gross_ytd'];
    }

    /**
     * Sets gross_ytd
     *
     * @param float $gross_ytd
     *
     * @return $this
     */
    public function setGrossYtd($gross_ytd)
    {
        $this->container['gross_ytd'] = $gross_ytd;

        return $this;
    }

    /**
     * Gets net_ytd
     *
     * @return float
     */
    public function getNetYtd()
    {
        return $this->container['net_ytd'];
    }

    /**
     * Sets net_ytd
     *
     * @param float $net_ytd
     *
     * @return $this
     */
    public function setNetYtd($net_ytd)
    {
        $this->container['net_ytd'] = $net_ytd;

        return $this;
    }

    /**
     * Gets withholding_ytd
     *
     * @return float
     */
    public function getWithholdingYtd()
    {
        return $this->container['withholding_ytd'];
    }

    /**
     * Sets withholding_ytd
     *
     * @param float $withholding_ytd
     *
     * @return $this
     */
    public function setWithholdingYtd($withholding_ytd)
    {
        $this->container['withholding_ytd'] = $withholding_ytd;

        return $this;
    }

    /**
     * Gets base_pay_rate
     *
     * @return string
     */
    public function getBasePayRate()
    {
        return $this->container['base_pay_rate'];
    }

    /**
     * Sets base_pay_rate
     *
     * @param string $base_pay_rate
     *
     * @return $this
     */
    public function setBasePayRate($base_pay_rate)
    {
        $this->container['base_pay_rate'] = $base_pay_rate;

        return $this;
    }

    /**
     * Gets base_rate
     *
     * @return string
     */
    public function getBaseRate()
    {
        return $this->container['base_rate'];
    }

    /**
     * Sets base_rate
     *
     * @param string $base_rate
     *
     * @return $this
     */
    public function setBaseRate($base_rate)
    {
        $this->container['base_rate'] = $base_rate;

        return $this;
    }

    /**
     * Gets hourly_rate
     *
     * @return float
     */
    public function getHourlyRate()
    {
        return $this->container['hourly_rate'];
    }

    /**
     * Sets hourly_rate
     *
     * @param float $hourly_rate
     *
     * @return $this
     */
    public function setHourlyRate($hourly_rate)
    {
        $this->container['hourly_rate'] = $hourly_rate;

        return $this;
    }

    /**
     * Gets pre_tax_deductions_ytd
     *
     * @return float
     */
    public function getPreTaxDeductionsYtd()
    {
        return $this->container['pre_tax_deductions_ytd'];
    }

    /**
     * Sets pre_tax_deductions_ytd
     *
     * @param float $pre_tax_deductions_ytd
     *
     * @return $this
     */
    public function setPreTaxDeductionsYtd($pre_tax_deductions_ytd)
    {
        $this->container['pre_tax_deductions_ytd'] = $pre_tax_deductions_ytd;

        return $this;
    }

    /**
     * Gets post_tax_deductions_ytd
     *
     * @return float
     */
    public function getPostTaxDeductionsYtd()
    {
        return $this->container['post_tax_deductions_ytd'];
    }

    /**
     * Sets post_tax_deductions_ytd
     *
     * @param float $post_tax_deductions_ytd
     *
     * @return $this
     */
    public function setPostTaxDeductionsYtd($post_tax_deductions_ytd)
    {
        $this->container['post_tax_deductions_ytd'] = $post_tax_deductions_ytd;

        return $this;
    }

    /**
     * Gets employee_base_rate
     *
     * @return float
     */
    public function getEmployeeBaseRate()
    {
        return $this->container['employee_base_rate'];
    }

    /**
     * Sets employee_base_rate
     *
     * @param float $employee_base_rate
     *
     * @return $this
     */
    public function setEmployeeBaseRate($employee_base_rate)
    {
        $this->container['employee_base_rate'] = $employee_base_rate;

        return $this;
    }

    /**
     * Gets employee_base_rate_unit
     *
     * @return string
     */
    public function getEmployeeBaseRateUnit()
    {
        return $this->container['employee_base_rate_unit'];
    }

    /**
     * Sets employee_base_rate_unit
     *
     * @param string $employee_base_rate_unit
     *
     * @return $this
     */
    public function setEmployeeBaseRateUnit($employee_base_rate_unit)
    {
        $allowedValues = $this->getEmployeeBaseRateUnitAllowableValues();
        if (! is_null($employee_base_rate_unit) && ! in_array($employee_base_rate_unit, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'employee_base_rate_unit', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['employee_base_rate_unit'] = $employee_base_rate_unit;

        return $this;
    }

    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param int $offset Offset
     *
     * @return bool
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param int $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param int $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
